FormInfo ^{
    br=<br>
}
Script ^{
    Mod_ExpArts ^{
        BombIsDepleted=Эта бомба уже истратила свой заряд и не может быть использована повторно. Представляет ценность исключительно в виде металлолома.
        BombWithTimer= с таймером
        ContactFuse=Контактный
        ContactFuseAndTimer=Контактный с таймером
        ContactFuseIsActivated=<br>Контактный взрыватель активируется
        ContactFuseIsActive=<br>Контактный взрыватель активирован
        ContactFuseIsSet=<br>Установлен контактный взрыватель
        DepletedEMPBomb=Разряженная ЭМП бомба
        DepletedEMPMine=Разряженная ЭМП мина
        DepletedStunBomb=Разряженная оглушающая бомба
        DepletedStunMine=Разряженная оглушающая мина
        DetonatorIsAlreadySet=На этой бомбе уже стоит<br>один детонатор. Второй<br>ей ни к чему.
        HowMuchDaysToSet=На сколько дней вы хотите установить таймер?
        ItemDestroyedByEMP=Недавний электромагнитный импульс полностью вывел из строя <Item>! Требуется капитальный ремонт.
        MineIsDepleted=Эта мина уже истратила свой заряд и не может быть использована повторно. Представляет ценность исключительно в виде металлолома.
        SelectFuseType=Выберите тип взрывателя:
        TheBomb=бомба
        TheMine=мина
        TimerIsSet=<br>Таймер установлен на <Data1> дн.
        TimerWithDelay=Заданный таймер
        WillBeActivatedIn=<br>Сработает через: <Data1> дн.
        WillExplodeIn=<br>Детонирует через: <Data1> дн.
    }
}
Artefacts ^{
    ArtArtefactor ^{
        Description=Артефактор - переходник для подключения артефактов. В его схеме используется принцип кристаллического инвертирования сигнала, поэтому он позволяет подключить <clr>три<clrEnd> артефакта вместо одного дроида.
        Name=Артефактор
        OnActCode ^{
            01=if(ItemIsBroken(CurItem())) exit;
            02=if(ItemIsInUse(CurItem()))
            03 ^{
                01=dword ship = ScriptItemActShip();
                02=int oneOblivionConnectorCheck = 1;
                03=int oneFuelCheck = 1;
                04=int oneErrimetrCheck = 1;
                05=int isObliv = 0;
                06=int isBlackGoo=0;
                07=int isErimetr=0;
                08=if(!ship) exit;
                09=if(ArtefactTypeInUse(ship, 'RNDart_03')) exit;
                10=int hasker_check = 0;
                11=dword shipHook = ShipEqInSlot(ship,t_CargoHook);
                12=dword artefactorItem = CurItem();
                13=dword bonusNormal = FindBonusByCustomTag('ErimeterNorm');
                14=dword bonusNone = FindBonusByCustomTag('ErimeterBounusNone');
                15=for(int i = 0; i < ShipArts(ship); i = i + 1)
                16 ^{
                    01=dword art = ShipArts(ship, i);
                    02=if(ItemType(art) == t_Artefact)
                    03 ^{
                        01=if(EquipmentImageName(art) == 'RNDart_03')
                        02 ^{
                            01=if(!ItemIsBroken(art))
                            02 ^{
                                01=hasker_check = 1;
                            }
                        }
                        03=if(ItemType(art) == t_ArtefactFuel)
                        04 ^{
                            01=if(!ItemIsBroken(art) && ScriptItemActionType(t_OnStep,11) && !ArtefactTypeInUse(shipo, t_ArtefactFuel) && oneFuelCheck) isBlackGoo=1;
                        }
                        05=if(ItemType(art) == t_ArtefactHook)
                        06 ^{
                            01=if(!ItemIsBroken(art) && !ArtefactTypeInUse(shipo, t_ArtefactHook) && oneErrimetrCheck && (!ScriptItemActionType(t_OnStep,11)|| ScriptItemActionType(t_OnReEnteringForm) || ScriptItemActionType(t_OnNonStandartEqChange))) isErimetr=1;
                        }
                        07=if(ItemType(art) == t_ArtForsage)
                        08 ^{
                            01=if(!ItemIsBroken(art) && (ScriptItemActionType(t_OnStep,11) | ScriptItemActionType(t_OnReEnteringForm) | ScriptItemActionType(t_OnNonStandartEqChange)) && !ArtefactTypeInUse(shipo, t_ArtForsage) && oneOblivionConnectorCheck) isObliv=1;
                        }
                    }
                }
                17=if(hasker_check)
                18 ^{
                    01=if(ScriptItemActionType(t_OnStep, 11))
                    02 ^{
                        01=CreateActCodeEvent(t_OnStep, art, ship, 0, 0, 11);
                    }
                    03=if(ScriptItemActionType(t_OnPlayerTalkedWithShip) || ScriptItemActionType(t_OnShipTalkedWithPlayer))
                    04 ^{
                        01=if(ScriptItemActionType(t_OnPlayerTalkedWithShip)) CreateActCodeEvent(t_OnPlayerTalkedWithShip, art, ship, ScriptItemActObject1(), 0, 0);
                        02=else CreateActCodeEvent(t_OnShipTalkedWithPlayer, art, ship, ScriptItemActObject1(), 0, 0);
                    }
                }
                19=if(isBlackGoo)
                20 ^{
                    01=dword fuel=ShipFuel(ship);
                    02=dword shipFuelTanks=ShipEqInSlot(ship,t_FuelTanks);
                    03=int bonusFuelWithNone=4;
                    05=int fuelCapacity = GetEquipmentStats(shipFuelTanks,0);
                    06=if(ItemOwner(shipFuelTanks) == None)
                    07 ^{
                        01=if(fuelCapacity>=(fuel+4)) ShipFuel(ship,fuel+bonusFuelWithNone);
                        02=else ShipFuel(ship,(fuelCapacity-fuel)+fuel);
                    }
                    08=else if (fuelCapacity>=fuel+2)ShipFuel(ship,fuel+2);
                    09=else ShipFuel(ship,fuelCapacity);
                    10=oneFuelCheck=0;
                }
                21=if(isErimetr)
                22 ^{
                    01=if(ScriptItemActionType(t_OnItemEquip) || ScriptItemActionType(t_OnReEnteringForm) || ScriptItemActionType(t_OnNonStandartEqChange))
                    02 ^{
                        01=if(ItemExtraSpecialsCountByType(artefactorItem,bonusNormal)<1 && ItemOwner(shipHook)!=None)
                        02 ^{
                            01=if(ItemExtraSpecialsCountByType(artefactorItem,bonusNone)>0) ItemExtraSpecialsDeleteByType(artefactorItem,bonusNone);
                            02=ItemExtraSpecialsAddByType(artefactorItem,bonusNormal);
                        }
                        03=else if(ItemExtraSpecialsCountByType(artefactorItem,bonusNone)<1 && ItemOwner(shipHook)==None)
                        04 ^{
                            01=if(ItemExtraSpecialsCountByType(artefactorItem,bonusNormal)>0) ItemExtraSpecialsDeleteByType(artefactorItem,bonusNormal);
                            02=ItemExtraSpecialsAddByType(artefactorItem,bonusNone);
                        }
                    }
                    03=if(ScriptItemActionType(t_OnItemDeEquip))
                    04 ^{
                        01=if(ItemExtraSpecialsCountByType(artefactorItem,bonusNormal)>0) ItemExtraSpecialsDeleteByType(artefactorItem,bonusNormal);
                        02=else if(ItemExtraSpecialsCountByType(artefactorItem,bonusNone)>0) ItemExtraSpecialsDeleteByType(artefactorItem,bonusNone);
                    }
                }
                23=else if(!ScriptItemActionType(t_OnStep,11))
                24 ^{
                    01=if(ItemExtraSpecialsCountByType(artefactorItem,bonusNormal)>0)ItemExtraSpecialsDeleteByType(artefactorItem,bonusNormal);
                    02=if(ItemExtraSpecialsCountByType(artefactorItem,bonusNone)>0) ItemExtraSpecialsDeleteByType(artefactorItem,bonusNone);
                }
                25=if(isObliv)
                26 ^{
                    01=dword shipEngine = ShipEqInSlot(Player(),t_Engine);
                    02=if(ShipSpecialBonuses(ship,bonSlotForsage)<1) ShipSpecialBonuses(ship,bonSlotForsage,1);
                    03=if(ScriptItemActionType(t_OnStep,11) && !ItemIsBroken(shipEngine) && OrderForsage(ship) && !ScriptItemActionType(t_OnReEnteringForm))
                    04 ^{
                        01=int persentMax = 100;
                        02=dword engineOwner = ItemOwner(engineOwner);
                        03=dword engineDura = ItemDurability(shipEngine);
                        04=if(engineOwner!=None && (engineDura+8)<persentMax) ItemDurability(shipEngine,engineDura+8);
                        05=else if(engineOwner==None && (engineDura+11)<persentMax) ItemDurability(shipEngine,engineDura+11);
                    }
                }
                27=else if(ScriptItemActionType(t_OnReEnteringForm) && ShipSpecialBonuses(ship,bonSlotForsage)>0 && !ArtefactTypeInUse(ship, t_ArtForsage) && !isObliv)
                28 ^{
                    01=OrderForsage(ship,0);
                    02=ShipSpecialBonuses(ship,bonSlotForsage,0);
                }
                29=if(ScriptItemActionType(t_OnItemDeEquip) && ShipSpecialBonuses(ship,bonSlotForsage)>0 && !ArtefactTypeInUse(ship, t_ArtForsage))
                30 ^{
                    01=OrderForsage(ship,0);
                    02=ShipSpecialBonuses(ship,bonSlotForsage,0);
                }
                31=if(ScriptItemActionType(t_OnNonStandartEqChange))UpdateFormShip();
            }
        }
        OnActCodeTypes=t_OnStep,t_OnPlayerTalkedWithShip,t_OnShipTalkedWithPlayer,t_OnItemEquip,t_OnItemDeEquip,t_OnReEnteringForm,t_OnNonStandartEqChange
        OnActStepTypes=11
        Text=Разветвитель для подключения редких видов оборудования, открывает <clr>3 места под артефакты<clrEnd>. Позволяет использовать коннектор дроида для подключения <clr>семи<clrEnd> артефактов. Дополнительные шины питания и передачи данных дают возможность <clr>Пролонгеру<clrEnd>, <clr>Вероятностному анализатору<clrEnd>, <clr>Сканерному кэшу<clrEnd>, <clr>Черной жиже<clrEnd>, <clr>Эриметру<clrEnd>, <clr>Обливионному коннектору<clrEnd> и <clr>Биомиру<clrEnd> работать в режиме ограниченной функциональности из трюма корабля, не занимая слот нестандартного оборудования.
    }
    CustomArtefacts ^{
        Booster ^{
            Broken=(сломан)
            BrokenInBattle=В бою была повреждена вычислительная система <color=255,240,100>бустера</color>! Из-за высокой вероятности самопроизвольной детонации ракет система безопасности отключила артефакт.
            BrokenInUse=Длительный срок эксплуатации износил калибровочные узлы <color=255,240,100>бустера</color>, ваш корабль теперь цель номер один. Требуется ремонт.
            CanBeABDrop=1
            CanBeReward=1
            CanBeTreasure=0
            Cost=2500
            CountsAs=ArtFastRacks
            Description=Бустер - новейшее слово техники в области самонаведения ракет. Он оптимизирует системы наведения всех пусковых установок на борту, что позволяет им наводить ракеты на цель ещё до их запуска. Кроме того, Бустер перераспределяет расход топлива, увеличивая скорость ракет в ущерб максимальной продолжительности их полёта.
            KellerExchange=2
            KellerValue=20
            Name=Бустер
            OnActCode ^{
                01=if(ItemIsBroken(CurItem())) exit;
                02=dword ship = ScriptItemActShip();
                03=if(!ship) exit;
                04=if(CustomWeaponType(CurItem()) == 'PhysGun') exit;
                05=dword missile = ScriptItemActObject1();
                06=MissileAngle(missile, Angle(WeaponTarget(ScriptItemActObject2()), missile));
                07=MissileLive(missile, RndObject(500, 600, ship));
                08=MissileSpeed(missile, MissileSpeed(missile) + RndObject(900, 1400, ship));
                09=if(ItemIsBroken(CurItem()))
                09 ^{
                    01=if(IsPlayer(ship)) Ether(8, '', CT('Artefacts.CustomArtefacts.Booster.BrokenInUse'));
                }
            }
            OnActCodeTypes=t_OnMissileShot
            SharedEffect=0
            SharedUse=0
            Size=18
            Text=Оптимизирует системы наведения пусковых установок, что позволяет им <clr>наводить ракеты<clrEnd> на цель ещё перед запуском. Кроме того, перераспределяет расход топлива, увеличивая <clr>скорость ракет<clrEnd> в ущерб максимальной продолжительности их полёта.
        }
        EMP_bomb ^{
            Cost=1500
            KellerExchange=2
            KellerValue=20
            Name=ЭМП бомба
            NoWear=1
            Size=5
            Text=При активации генерирует мощный электромагнитный импульс. Наносит тяжёлые повреждения всей электронике и полностью выводит из строя двигатели<br>на обширной территории.
        }
        Hasker_PROx64 ^{
            Broken=(отключён)
            BrokenInBattle=При выполнении манёвра уклонения <color=255,240,100>Хаскер_PROx64</color> выпал из своего гнезда. От удара о палубу экран прибора разбился и теперь требует замены.
            BrokenInUse=Перепад напряжения энергетических узлов корабля вызвал короткое замыкание в <color=255,240,100>Хаскере_PROx64</color>. Требуется замена оплавленных контактов и главных наноплат.
            CanBeABDrop=1
            CanBeReward=1
            CanBeTreasure=0
            Cost=1100
            CountsAs=ArtMiniExpl
            Description=Хаскер_PROx64 - полулегальная пеленгская разработка, которая решительно не рекомендуется к применению в отношении законопослушных пилотов. Хаскер налаживает неустойчивое скрытое соединение с другим кораблём через канал связи обыкновенного коммуникатора. При перечислении денег на счёт капитана корабля, использующего Хаскер_PROx64, либо при открытии створок грузового шлюза, капитан судна, подвергнутого атаке Хаскера, рискует недосчитаться на своём счету или в трюме несколько большей суммы или части груза, чем он планировал передавать вымогателю.
            KellerExchange=2
            KellerValue=20
            Name=Хаскер_PROx64
            OnActCode ^{
                01=dword cur_item = CurItem();
                02=if(ScriptItemActionType(t_OnItemDeEquip))
                02 ^{
                    01=CustomArtData(cur_item, 1, 0);
                    02=CustomArtData(cur_item, 2, 0);
                }
                03=if(ItemIsBroken(cur_item)) exit;
                04=dword cur_ship = ScriptItemActShip();
                05=if(!cur_ship) exit;
                06=if(CustomArtData(cur_item, 3) >= CurTurn()) exit;
                07=if(ScriptItemActionType(t_OnStep))
                07 ^{
                    01=if(cur_ship != Player())
                    02 ^{
                        01=if(ShipTypeN(cur_ship) == 1)
                        02 ^{
                            01=if(ShipInNormalSpace(cur_ship))
                            02 ^{
                                01=if(!CustomArtData(cur_item, 1) || !CustomArtData(cur_item, 2))
                                02 ^{
                                    01=CustomArtData(cur_item, 1, ShipStatus(cur_ship, 1));
                                    02=CustomArtData(cur_item, 2, ShipMoney(cur_ship));
                                }
                                03=else
                                04 ^{
                                    01=if(CustomArtData(cur_item, 1) != ShipStatus(cur_ship, 1))
                                    02 ^{
                                        01=if(CustomArtData(cur_item, 2) != ShipMoney(cur_ship))
                                        02 ^{
                                            01=ShipMoney(cur_ship, ShipMoney(cur_ship) + (((ShipMoney(cur_ship) - CustomArtData(cur_item, 2)) * RndObject(55, 95, cur_ship)) / 100));
                                            02=ItemDurability(cur_item, ItemDurability(cur_item) - 5);
                                            03=CustomArtData(cur_item, 3, CurTurn() + RndObject(1, 3, cur_ship));
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                08=if(ScriptItemActionType(t_OnPlayerTalkedWithShip) || ScriptItemActionType(t_OnShipTalkedWithPlayer))
                08 ^{
                    01=dword ship = ScriptItemActObject1();
                    02=int drp_scs = 0;
                    03=for(int i = GalaxyEvents() - 1; i >= 0; i = i - 1)
                    03 ^{
                        01=if(GalaxyEventDate(i) < CurTurn()) break;
                        02=if(GalaxyEventType(i) == 'PlayerExtortsMoney' || GalaxyEventType(i) == 'PlayerAcceptsMoneyForTruce')
                        02 ^{
                            01=if(ItemIsInUse(cur_item)) int how_much = RndObject(55, 95, ship);
                            02=else how_much = RndObject(25, 50, ship);
                            03=int money = (GalaxyEventData(i, 0) * how_much) / 100;
                            04=ShipMoney(Player(), ShipMoney(Player()) + money);
                            05=str text = Format('<color=255,240,100>Хаскер_PROx64</color> произвёл успешный взлом! На ваш счёт поступают дополнительные средства в размере MONEY cr.', 'MONEY', money);
                            06=Ether(0, '', text);
                            07=Sound('Sound.Sell');
                            08=ItemDurability(cur_item, ItemDurability(cur_item) - 5);
                            09=CustomArtData(cur_item, 3, CurTurn() + RndObject(1, 3, ship));
                        }
                        03=else if(GalaxyEventType(i) == 'PlayerExtortsGoods')
                        03 ^{
                            01=for(int j = t_Food; j <= t_Narcotics; j = j + 1)
                            02 ^{
                                01=if(GoodsCount(ship, j) > 1)
                                02 ^{
                                    01=int how_much2;
                                    02=if(ItemIsInUse(cur_item)) how_much2 = RndObject(2, GoodsCount(ship, j), ship);
                                    03=else how_much2 = RndObject(1, GoodsCount(ship, j) - 1, ship);
                                    04=GoodsDrop(ship, j, how_much2);
                                    05=drp_scs = 1;
                                }
                                03=if(drp_scs && j == t_Narcotics)
                                04 ^{
                                    01=str text_2 = '<color=255,240,100>Хаскер_PROx64</color> произвёл успешный взлом грузовых систем корабля, готовьтесь принимать чужой груз!';
                                    02=Ether(0, '', text_2);
                                    03=ItemDurability(cur_item, ItemDurability(cur_item) - 5);
                                    04=CustomArtData(cur_item, 3, CurTurn() + RndObject(1, 3, ship));
                                }
                            }
                        }
                    }
                    04=if(ItemIsBroken(cur_item))
                    04 ^{
                        01=if(IsPlayer(cur_ship)) Ether(8, '', CT('Artefacts.CustomArtefacts.Hasker_PROx64.BrokenInUse'));
                    }
                }
                09=if(!ItemIsInUse(cur_item))
                09 ^{
                    01=CustomArtData(cur_item, 1, 0);
                    02=CustomArtData(cur_item, 2, 0);
                }
            }
            OnActCodeTypes=t_OnStep,t_OnItemDeEquip,t_OnPlayerTalkedWithShip,t_OnShipTalkedWithPlayer
            OnActStepTypes=11
            SharedEffect=0
            SharedUse=0
            Size=5
            Text=Налаживает неустойчивое скрытое соединение с другим кораблём через канал связи обыкновенного коммуникатора. При перечислении денег на счёт капитана корабля, использующего <color=255,240,100>Хаскер_PROx64</color>, либо при открытии створок грузового шлюза, капитан судна, подвергнутого атаке <color=255,240,100>Хаскера</color>, рискует недосчитаться на своём счету или в трюме несколько <color=255,240,100>большей суммы</color> или <color=255,240,100>части груза</color>, чем он планировал передавать вымогателю.
        }
        Null-generator ^{
            Cost=2500
            KellerExchange=2
            KellerValue=20
            Name=Нуль-генератор
            NoWear=1
            Size=5
            Text=Искривляет темпоральное поле вокруг корабля и убирает гравитационные помехи из прыжкового контура двигателя, тем самым позволяя совершить <color=255,240,100>нуль-переход из любой точки</color> пространства. К сожалению, после первого же подобного перехода источник питания генератора полностью истощается, а потому использовать устройство повторно физически невозможно.
        }
        Reflector ^{
            Broken=(изношен)
            BrokenInBattle=В результате полученного в бою удара купол <color=255,240,100>рефлектора</color> треснул пополам. В таком состоянии устройство не способно отражать урон.
            BrokenInUse=<color=255,240,100>Рефлектор</color> сильно износился и более не функционирует. Требуется капитальный ремонт.
            CanBeABDrop=1
            CanBeReward=1
            CanBeTreasure=0
            Cost=1600
            CountsAs=ArtEnergyDef
            Description=Рефлектор генерирует вокруг корабля особое поле, которое полностью отражает тепловое и ионизирующее излучение, исходящее от звезды. При этом всё отражённое таким образом излучение перенаправляется на враждебно настроенные корабли, находящиеся в достаточной близости от носителя артефакта.
            KellerExchange=2
            KellerValue=20
            Name=Рефлектор
            OnActCode ^{
                01=dword cur_item = CurItem();
                02=if(ItemIsBroken(cur_item)) exit;
                03=dword cur_ship = ScriptItemActShip();
                04=if(!cur_ship) exit;
                05=if(ScriptItemActionType(t_OnTakingDamage))
                05 ^{
                    01=if(ObjectType(ScriptItemActObject1()) == 1)
                    01 ^{
                        01=ItemDurability(cur_item, ItemDurability(cur_item) - 3);
                        02=int i = 0;
                        03=dword ship = 0;
                        04=dword damag = ScriptItemActParam();
                        05=if(CustomArtData(cur_item, 3) != CurTurn())
                        05 ^{
                            01=if(ShipStar(Player()) == ShipStar(cur_ship) && ShipInNormalSpace(Player()))
                            01 ^{
                                01=ShowEffect('Weapon.13', 6, cur_ship, cur_ship, 0, 0, 1, 0, 0, 0);
                            }
                            03=CustomArtData(cur_item, 3, CurTurn());
                        }
                        06=if(ShipTypeN(cur_ship) == 1)
                        06 ^{
                            01=for(i = 0; i < StarShips(ShipStar(cur_ship)); i = i + 1)
                            01 ^{
                                01=ship = StarShips(ShipStar(cur_ship), i);
                                02=if(Dist(ship, cur_ship) > 330) continue;
                                03=if(RelationToRanger(ship, cur_ship) >= 10) continue;
                                04=if(!ShipInNormalSpace(ship)) continue;
                                05=if(Dist(ship, cur_ship) > 165) damag = damag - (damag / 3);
                                06=if(HullHP(ship) > damag) HullHP(ship, HullHP(ship) - damag);
                                07=else ShipDestroy(ship, 1);
                                08=if(FilmFlags(0))
                                09 ^{
                                    01=ShowEffect('Weapon.NoGraph', 0, ship, cur_ship, damag, 0, 0, 255,255,255);
                                }
                            }
                        }
                        07=if(ItemIsBroken(cur_item))
                        07 ^{
                            01=if(IsPlayer(cur_ship)) Ether(8, '', CT('Artefacts.CustomArtefacts.Reflector.BrokenInUse'));
                        }
                        08=ScriptItemActParam(0);
                    }
                }
                06=else
                06 ^{
                    01=ScriptItemActParam(ScriptItemActParam() - ScriptItemActParam() / 5);
                    02=if(RndObject(1, 100, cur_ship) <= 20) ItemDurability(cur_item, ItemDurability(cur_item) - 1);
                    03=if(ItemIsBroken(cur_item))
                    03 ^{
                        01=if(IsPlayer(cur_ship)) Ether(8, '', CT('Artefacts.CustomArtefacts.Reflector.BrokenInUse'));
                    }
                }
            }
            OnActCodeTypes=t_OnTakingDamage,t_OnTakingDamageEn
            SharedEffect=0
            SharedUse=0
            Size=12
            Text=Создаёт вокруг корабля особое поле, которое полностью отражает тепловое и ионизирующее излучение, исходящее от звезды. При этом всё отражённое таким образом излучение <clr>перенаправляется<clrEnd> на враждебно настроенные корабли, находящиеся в достаточной близости от носителя <clr>Рефлектора<clrEnd>.
            Text=<clr><clrEnd>
            Text=В качестве побочного эффекта, увеличивает защиту от энергетического оружия на <clr>20%<clrEnd>.
        }
        Stun_bomb ^{
            Cost=1500
            KellerExchange=2
            KellerValue=20
            Name=Оглушающая бомба
            NoWear=1
            Size=5
            Text=Сложное электронное устройство, уникальное наследие древности, при активации генерирующее поток излучения неизвестной доселе природы. Излучение подавляет любую высшую нервную деятельность, равно как и логику любых типов компьютеров<br>на срок от <color=255,240,100>5</color> до <color=255,240,100>15</color> суток.
        }
        Techdisruptor ^{
            Broken=(не функционирует)
            BrokenInBattle=Меткое вражеское попадание повредило энергетический пакет <color=255,240,100>техдиструптора</color>. Устройство более не функционально.
            BrokenInUse=<color=255,240,100>Техдиструптор</color> израсходовал свой энергетический ресурс и нуждается в перезарядке.
            CanBeABDrop=1
            CanBeReward=1
            CanBeTreasure=0
            Cost=2100
            CountsAs=ArtSplinter
            Description=Техдиструптор переносит на снаряды осколочного оружия нейтральный статический заряд и повышает их начальную скорость, в результате чего броня корпуса цели и генератор защитного поля имеют шанс полностью "проглядеть" входящий снаряд.
            KellerExchange=2
            KellerValue=20
            Name=Техдиструптор
            OnActCode ^{
                01=if(ItemIsBroken(CurItem())) exit;
                02=dword ship = ScriptItemActShip();
                03=if(!ship) exit;
                04=dword target = ScriptItemActObject1();
                05=if(ObjectType(target) != 4 && ObjectType(target) != 5) exit;
                06=int damage_set = GetEquipmentStats(ScriptItemActObject2(), 6);
                07=if(!(damage_set & 2)) exit;
                08=if((damage_set & 2048)) exit;
                09=int shot = RndObject(1, 100, ship);
                10=int shot_chance = 25;
                11=if(shot_chance >= shot)
                11 ^{
                    01=int damag = (ScriptItemActParam() + ShipArmor(target)) * 100;
                    02=damag = damag / (100 - ShipProtectability(target));
                    03=ScriptItemActParam(damag);
                }
                12=if(ItemIsBroken(CurItem()))
                12 ^{
                    01=if(IsPlayer(ship)) Ether(8, '', CT('Artefacts.CustomArtefacts.Techdisruptor.BrokenInUse'));
                }
            }
            OnActCodeTypes=t_OnWeaponShot
            SharedEffect=0
            SharedUse=0
            Size=7
            Text=Переносит на снаряды осколочного оружия нейтральный статический заряд и повышает их начальную скорость, в результате чего броня корпуса цели и генератор защитного поля игнорируются с вероятностью в <clr>25%<clrEnd>.
        }
    }
}
UselessItems ^{
    BombDetonator ^{
        Cost=Average
        Name=Детонатор для бомбы
        OnActCode ^{
            01=dword bomb = ScriptItemActObject1();
            02=str tstr = EquipmentImageName(bomb);
            03=if(tstr != 'Quark_bomb' && tstr != 'Stun_bomb' && tstr != 'EMP_bomb' && ItemType(bomb) != t_ArtefactBomb) exit;
            04=if(UselessItemData(bomb, 2) == 1) exit;
            05=if(UselessItemData(bomb, 2) <= -1)
            05 ^{
                01=MessageBox(CT('Script.Mod_ExpArts.DetonatorIsAlreadySet'), 34);
                02=ScriptItemActParam(2);
                03=exit;
            }
            06=unknown optionsArr = newarray(3);
            07=optionsArr[0] = CT('Script.Mod_ExpArts.ContactFuse');
            08=optionsArr[1] = CT('Script.Mod_ExpArts.TimerWithDelay');
            09=optionsArr[2] = CT('Script.Mod_ExpArts.ContactFuseAndTimer');
            10=int choosed_fuse = ListBox(CT('Script.Mod_ExpArts.SelectFuseType'), optionsArr);
            11=if(~choosed_fuse)
            11 ^{
                01=if(ItemType(bomb) == t_ArtefactBomb) str BombName = 'Bm.Items.2ArtBomb_s';
                02=else BombName = 'Bm.ItemsUseless.2' + tstr + '_s';
                03=if(choosed_fuse > 0)
                03 ^{
                    01=int blow_turn = NumberBox(BombName, CT('Script.Mod_ExpArts.HowMuchDaysToSet'), 1, 30);
                    02=if(blow_turn < 1)
                    02 ^{
                        01=ScriptItemActParam(2);
                        02=exit;
                    }
                }
                04=if(~findsubstr(tstr, '_bomb')) dword cocked_bomb = bomb;
                05=else if(ItemType(bomb) == t_ArtefactBomb)
                05 ^{
                    01=cocked_bomb = CreateQuestItem('Quark_bomb');
                    02=ItemOwner(cocked_bomb, ItemOwner(bomb));
                    03=ItemSize(cocked_bomb, ItemSize(bomb));
                    04=ItemCost(cocked_bomb, ItemCost(bomb));
                    05=DropItemInSystem(StarNearbyStars(ShipStar(Player()), 1), GetArtFromShip(Player(), FindItemInShip(Player(), bomb)), 30000, 30000, 30000, 30000);
                    06=ItemDestroy(bomb, 1);
                    07=AddItemToShip(Player(), cocked_bomb);
                }
                06=str add_note = substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd>';
                07=if(!choosed_fuse)
                07 ^{
                    01=UselessItemData(cocked_bomb, 2, -1);
                    02=add_note = '';
                    03=SetName(cocked_bomb, Format(Name(cocked_bomb), CT('Script.Mod_ExpArts.TheBomb'), '</color>' + CT('Script.Mod_ExpArts.TheMine')));
                }
                08=else if(choosed_fuse == 1)
                08 ^{
                    01=UselessItemData(cocked_bomb, 2, -2);
                    02=UselessItemData(cocked_bomb, 1, blow_turn);
                    03=add_note = add_note + CT('Script.Mod_ExpArts.TimerIsSet');
                    04=SetName(cocked_bomb, Name(cocked_bomb) + CT('Script.Mod_ExpArts.BombWithTimer'));
                }
                09=else if(choosed_fuse == 2)
                09 ^{
                    01=UselessItemData(cocked_bomb, 2, -3);
                    02=UselessItemData(cocked_bomb, 1, blow_turn);
                    03=add_note = add_note + CT('Script.Mod_ExpArts.TimerIsSet');
                    04=tstr = '</color>' + CT('Script.Mod_ExpArts.TheMine') + CT('Script.Mod_ExpArts.BombWithTimer');
                    05=SetName(cocked_bomb, Format(Name(cocked_bomb), CT('Script.Mod_ExpArts.TheBomb'), tstr));
                }
                10=UselessItemText(cocked_bomb, CT('UselessItems.' + EquipmentImageName(cocked_bomb) + '.Text') + add_note);
                11=ItemSize(cocked_bomb, ItemSize(cocked_bomb) + ItemSize(CurItem()));
                12=ItemCost(cocked_bomb, ItemCost(cocked_bomb) + ItemCost(CurItem()));
                13=ScriptItemActParam(1);
            }
            12=else ScriptItemActParam(2);
        }
        OnActCodeTypes=t_OnAnotherItem
        Owner=PirateClan
        Size=1
        Text=При установке на <color=255,240,100>бомбу</color> подрывает (или активирует) её по истечении заданного времени, либо при контакте с приближающимся кораблём.
        Text=<clr><clrEnd>
        Text=Обратный отсчёт начнётся только после выброса бомбы в <color=255,240,100>открытый космос</color>, однако подобрать бомбу с активированным таймером<br>будет уже невозможно.
    }
    EMP_bomb ^{
        Cost=Big
        Name=ЭМП бомба
        OnActCode ^{
            01=dword bomb = CurItem();
            02=int primer_type = UselessItemData(bomb, 2);
            03=if(primer_type == 1) exit;
            04=int boom_flag = 0;
            05=if(ScriptItemActionType(t_OnStep))
            05 ^{
                01=if(ScriptItemActParam() == 5)
                01 ^{
                    01=if(primer_type == -5 || primer_type <= -7)
                    01 ^{
                        01=if(UselessItemData(bomb, 1) > 0)
                        01 ^{
                            01=if(UselessItemData(bomb, 1) == 1) boom_flag = 1;
                            02=else UselessItemData(bomb, 1, UselessItemData(bomb, 1) - 1);
                        }
                        02=if(primer_type == -5)
                        02 ^{
                            01=primer_type = -6;
                            02=UselessItemData(bomb, 2, -6);
                        }
                        03=else if(primer_type == -7)
                        03 ^{
                            01=primer_type = -9;
                            02=UselessItemData(bomb, 2, -9);
                        }
                    }
                }
                02=if(primer_type == -6 || primer_type == -9)
                02 ^{
                    01=if(!boom_flag)
                    01 ^{
                        01=bomb_star = ScriptItemActObject1();
                        02=for(int i = StarShips(bomb_star) - 1; i >= 0; i = i - 1)
                        02 ^{
                            01=ship = StarShips(bomb_star, i);
                            02=if(Dist(bomb, ship) <= 70)
                            02 ^{
                                01=boom_flag = 2;
                                02=break;
                            }
                        }
                        03=if(!boom_flag)
                        03 ^{
                            01=for(i = StarRuins(bomb_star) - 1; i >= 0; i = i - 1)
                            01 ^{
                                01=ship = StarRuins(bomb_star, i);
                                02=if(Dist(bomb, ship) <= 70)
                                02 ^{
                                    01=boom_flag = 2;
                                    02=break;
                                }
                            }
                        }
                    }
                }
            }
            06=else if(ScriptItemActionType(t_OnDropItem) || ScriptItemActionType(t_OnDropItemFixed))
            06 ^{
                01=if(ScriptItemActObject1() == bomb)
                01 ^{
                    01=if(!ScriptItemActObject2()) UselessItemData(bomb, 3, Id(ShipStar(ScriptItemActShip())) - 1);
                    02=else UselessItemData(bomb, 3, Id(ScriptItemActObject2()) - 1);
                    03=if(primer_type == 0)
                    03 ^{
                        01=primer_type = -4;
                        02=UselessItemData(bomb, 2, -4);
                    }
                    04=else if(primer_type == -1)
                    04 ^{
                        01=primer_type = -5;
                        02=UselessItemData(bomb, 2, -5);
                    }
                    05=else if(primer_type == -2)
                    05 ^{
                        01=UselessItemText(bomb, CT('UselessItems.' + EquipmentImageName(bomb) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.WillBeActivatedIn'));
                        02=primer_type = -8;
                        03=UselessItemData(bomb, 2, -8);
                    }
                    06=else if(primer_type == -3)
                    06 ^{
                        01=UselessItemText(bomb, CT('UselessItems.' + EquipmentImageName(bomb) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.WillBeActivatedIn'));
                        02=primer_type = -7;
                        03=UselessItemData(bomb, 2, -7);
                    }
                }
            }
            07=else if(ScriptItemActionType(t_OnItemPickUp))
            07 ^{
                01=if(ScriptItemActObject1() == bomb)
                01 ^{
                    01=if(primer_type == -4)
                    01 ^{
                        01=primer_type = 0;
                        02=UselessItemData(bomb, 2, 0);
                    }
                }
            }
            08=else if(ScriptItemActionType(t_OnItemHit))
            08 ^{
                01=if(ObjectType(ScriptItemActObject1()) == 7)
                01 ^{
                    01=if(FilmFlags(0)) FilmSound('Sound.Zamknulo', bomb);
                }
            }
            09=if(CurrentForm() == 'Ship') exit;
            10=if(ScriptItemActionType(t_OnItemDestroy) || ScriptItemActionType(t_OnDeath)) boom_flag = (primer_type <= -4);
            11=else if(ScriptItemActionType(t_OnItemPickUp)) boom_flag = (ScriptItemActObject1() == bomb && primer_type <= -5);
            12=if(boom_flag)
            12 ^{
                01=dword bomb_star = GalaxyStar(UselessItemData(bomb, 3));
                02=int player_can_see = FilmFlags(0);
                03=dword boom_ship = ScriptItemActShip();
                04=if(boom_ship)
                04 ^{
                    01=bomb_star = ShipStar(boom_ship);
                    02=if(!ScriptItemActObject2()) OrderNone(boom_ship);
                    03=if(player_can_see)
                    03 ^{
                        01=ShowStaticEffect('EMP_bomb_BAM', CoordX(boom_ship), CoordY(boom_ship));
                        02=FilmSound('Sound.Zamknulo', boom_ship);
                    }
                }
                05=else
                05 ^{
                    01=if(player_can_see)
                    01 ^{
                        01=ShowStaticEffect('EMP_bomb_BAM', CoordX(bomb), CoordY(bomb));
                        02=FilmSound('Sound.Zamknulo', bomb);
                    }
                }
                06=for(i = StarShips(bomb_star) - 1; i >= 0; i = i - 1)
                06 ^{
                    01=dword ship = StarShips(bomb_star, i);
                    02=if(boom_ship)
                    02 ^{
                        01=int Tdist = Dist(boom_ship, ship);
                        02=if(Tdist > 250) continue;
                    }
                    03=else
                    03 ^{
                        01=Tdist = Dist(bomb, ship);
                        02=if(Tdist > 250) continue;
                    }
                    04=str tempType = TrimNumbers(ShipType(ship));
                    05=if(!ShipInNormalSpace(ship))
                    05 ^{
                        01=if(tempType == 'Rattor')
                        01 ^{
                            01=if(ShipInScript(ship, 0))
                            01 ^{
                                01=if(GetData(0, ship) == -1)
                                01 ^{
                                    01=NoDropToShip(ship, 1);
                                    02=if(ScriptItemActionType(t_OnItemPickUp))
                                    02 ^{
                                        01=CoordX(bomb, CoordX(ship));
                                        02=CoordY(bomb, CoordY(ship));
                                    }
                                    03=DealDamageToShip(ship, bomb, 1000000);
                                }
                            }
                        }
                        02=continue;
                    }
                    06=if(ShipTypeN(ship) == t_Kling)
                    06 ^{
                        01=if(ShipSubType(ship) == 7)
                        01 ^{
                            01=if(tempType == '' || tempType == 'Rattor')
                            01 ^{
                                01=if(ShipFindCustomShipInfoByType(ship, 'ShipImmortalInfo') == -1)
                                01 ^{
                                    01=if(!ScriptItemActionType(t_OnStep, 11))
                                    01 ^{
                                        01=ShipSetBad(ship, ship);
                                        02=OrderFollowShip(ship, ship, 3);
                                        03=ItemDurability(ShipEqInSlot(ship, t_Engine), 100);
                                        04=OrderForsage(ship, 1);
                                    }
                                    02=else
                                    02 ^{
                                        01=NoDropToShip(ship, 1);
                                        02=DealDamageToShip(ship, 0, 1000000, 0);
                                        03=if(player_can_see) ShowEffect('Weapon.NoGraph', 0, ship, 0, 0, 6, 0, 0,0,0);
                                    }
                                }
                            }
                        }
                    }
                    07=if(tempType == 'Klissan' || tempType == 'Neurolink' || tempType == 'Machpella' || tempType == 'KillerAsteroid') continue;
                    08=int is_the_boss = (ship == Keller() || ship == Terron() || ship == Blazer());
                    09=for(int j = ShipItems(ship) - 1; j >= 1; j = j - 1)
                    09 ^{
                        01=dword item = ShipItems(ship, j);
                        02=if(ItemIsBroken(item)) continue;
                        03=if(!ItemIsInUse(item)) continue;
                        04=if(~EqSpecial(item))
                        04 ^{
                            01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BioEquip') == 1) continue;
                        }
                        05=if(EqCustomFaction(item) == 'Klissan') continue;
                        06=int reduce = round(75.0 - (45.0 * (Tdist * Tdist) / 62500));
                        07=if(!ShipProtectability(ship)) reduce = reduce * 2;
                        08=if(ship == boom_ship) reduce = 100;
                        09=if(is_the_boss) reduce = reduce / 10;
                        10=ItemDurability(item, ItemDurability(item) - reduce);
                        11=if(ItemIsBroken(item))
                        11 ^{
                            01=if(IsPlayer(ship)) Ether(8, '', Format(CT('Script.Mod_ExpArts.ItemDestroyedByEMP'), '<Item'+'>', ItemFullName(item) + '<color=' + ItemIsInUse(item, ship) + ',0,0></color>', '255,240,100'));
                        }
                        12=if(is_the_boss) continue;
                        13=ItemDurability(ShipEqInSlot(ship, t_Engine), 0);
                        14=int memHP = HullHP(ship);
                        15=HullHP(ship, HullHP(ship) + 100);
                        16=ShipSpecialBonuses(ship, bonHull, ShipSpecialBonuses(ship, bonHull) + reduce * 15);
                        17=DealDamageToShip(ship, 0, 10, 256);
                        18=ShipSpecialBonuses(ship, bonHull, ShipSpecialBonuses(ship, bonHull) - reduce * 15);
                        19=if(HullHP(ship) != memHP) HullHP(ship, memHP);
                    }
                    10=for(j = ShipSlots(ship, 2); j >= 1; j = j - 1)
                    10 ^{
                        01=item = ShipEqInSlot(ship, t_Artefact, j);
                        02=if(!item) continue;
                        03=if(ItemIsBroken(item)) continue;
                        04=if(!ItemCanBeBroken(item)) continue;
                        05=if(ItemType(item) > t_Artefact && ItemType(item) < t_ArtefactRadar) continue;
                        06=reduce = round(75.0 - (45.0 * (Tdist * Tdist) / 62500));
                        07=if(!ShipProtectability(ship)) reduce = reduce * 2;
                        08=if(ship == boom_ship) reduce = 100;
                        09=if(is_the_boss) reduce = reduce / 10;
                        10=ItemDurability(item, ItemDurability(item) - reduce);
                        11=if(ItemIsBroken(item))
                        11 ^{
                            01=if(IsPlayer(ship)) Ether(8, '', Format(CT('Script.Mod_ExpArts.ItemDestroyedByEMP'), '<Item'+'>', ItemFullName(item) + '<color=' + ItemIsInUse(item, ship) + ',0,0></color>', '255,240,100'));
                        }
                    }
                }
                07=if(primer_type <= -5 && primer_type != -8)
                07 ^{
                    01=SetName(bomb, CT('Script.Mod_ExpArts.DepletedEMPMine'));
                    02=UselessItemText(bomb, CT('Script.Mod_ExpArts.MineIsDepleted'));
                }
                08=else
                08 ^{
                    01=SetName(bomb, CT('Script.Mod_ExpArts.DepletedEMPBomb'));
                    02=UselessItemText(bomb, CT('Script.Mod_ExpArts.BombIsDepleted'));
                }
                09=ItemCost(bomb, RndObject(15, 21, bomb_star) * ItemSize(bomb));
                10=UselessItemData(bomb, 2, 1);
            }
        }
        OnActCodeTypes=t_OnStep,t_OnDropItem,t_OnDropItemFixed,t_OnItemPickUp,t_OnItemHit,t_OnItemDestroy,t_OnDeath
        OnActStepTypes=1,2,3,4,5,6,7,8,9,10,11
        Owner=PirateClan
        Size=7
        Text=При активации генерирует мощный электромагнитный импульс. Наносит тяжёлые повреждения всей электронике и полностью выводит из строя двигатели<br>на обширной территории.
    }
    ExpArts_BombsContainer ^{
        Cost=Big
        Name=Контейнер с бомбами
        OnUseCode ^{
            01=if(FindItemInShip(Player(), CurItem()) == -1) exit;
            02=if(MessageBoxYesNo('Вы уверены, что хотите открыть этот контейнер?'))
            03 ^{
                01=dword Titem = 0;
                02=str Ttype = 0;
                03=int Tquant = 0;
                04=if(UselessItemData(CurItem(), 1) > 30) Tquant = 1;
                05=if(UselessItemData(CurItem(), 1) > 70) Tquant = 2;
                06=if(UselessItemData(CurItem(), 1) > 95) Tquant = 3;
                07=while(Tquant > 0)
                08 ^{
                    01=Titem = CreateQuestItem('BombDetonator', PirateClan);
                    02=ItemSize(Titem, 1);
                    03=AddItemToShip(Player(), Titem);
                    04=Tquant = Tquant - 1;
                }
                09=Tquant = 1;
                10=if(UselessItemData(CurItem(), 2) > 35) Tquant = 2;
                11=if(UselessItemData(CurItem(), 2) > 75) Tquant = 3;
                12=if(UselessItemData(CurItem(), 2) > 90) Tquant = 4;
                13=while(Tquant > 0)
                14 ^{
                    01=Ttype = UselessItemData(CurItem(), 3) + '';
                    02=Ttype = substr(Ttype, Tquant - 1, 1);
                    03=if(Ttype == '1')
                    04 ^{
                        01=Titem = CreateArt(t_ArtefactBomb, PirateClan);
                        02=ItemSize(Titem, ItemSize(Titem) + RndObject(-2, 2, Player()));
                        03=ItemCost(Titem, ItemCost(Titem) + RndObject(-297, 303, Player()));
                        04=AddItemToShip(Player(), Titem);
                    }
                    05=else if(Ttype == '2')
                    06 ^{
                        01=Titem = CreateQuestItem('Stun_bomb', PirateClan);
                        02=ItemSize(Titem, ItemSize(Titem) + RndObject(-2, 2, Player()));
                        03=ItemCost(Titem, ItemCost(Titem) + RndObject(-297, 303, Player()));
                        04=AddItemToShip(Player(), Titem);
                    }
                    07=else
                    08 ^{
                        01=Titem = CreateQuestItem('EMP_bomb', PirateClan);
                        02=ItemSize(Titem, ItemSize(Titem) + RndObject(-2, 2, Player()));
                        03=ItemCost(Titem, ItemCost(Titem) + RndObject(-297, 303, Player()));
                        04=AddItemToShip(Player(), Titem);
                    }
                    09=Tquant = Tquant - 1;
                }
                15=FreeItem(GetItemFromShip(Player(), FindItemInShip(Player(), CurItem())));
            }
        }
        Owner=PirateClan
        Size=40
        Text=Тайник, предназначенный для оперативного обеспечения членов <color=255,240,100>пиратского клана</color> эффективным оружием. Содержит в себе несколько <color=255,240,100>бомб</color> и <color=255,240,100>детонаторов</color> пиратского производства.
    }
    ExpArts_ModsContainer ^{
        Cost=Big
        Name=Контейнер с кустарной модификацией
        OnUseCode ^{
            01=if(FindItemInShip(Player(), CurItem()) == -1) exit;
            02=if(MessageBoxYesNo('Вы уверены, что хотите открыть контейнер?'))
            03 ^{
                01=str itemName = 'RNDmoditem_' + UselessItemData(CurItem(), 1);
                02=dword item = CreateQuestItem(itemName, ItemOwner(CurItem()));
                03=AddItemToShip(Player(), item);
                04=FreeItem(GetItemFromShip(Player(), FindItemInShip(Player(), CurItem())));
            }
        }
        Owner=PirateClan
        Size=13
        Text=В попытках догнать Коалицию по уровню технического оснащения, <color=255,240,100>пиратское братство</color> начало производство собственных <color=255,240,100>улучшений</color> для различных типов <color=255,240,100>оборудования</color>. Общее качество подобных модификаций зачастую оставляет желать лучшего, однако требуемого эффекта им достигнуть всё же удаётся. Одной из традиционных схем распространения таких улучшений всегда выступала закладка разнообразных тайников.
    }
    ExpArts_SmugglersCompartment ^{
        Cost=Huge
        Name=Отсек контрабандиста
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_Hull) exit;
            03=if(HullType(item) == 7 || EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            04 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                02 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            05=if(~EqSpecial(item))
            05 ^{
                01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            06=if(ScriptItemActionType(t_OnCheckingUsability))
            06 ^{
                01=ScriptItemActParam(1);
            }
            07=else
            07 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>отсек контрабандиста</color> на ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                03 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_SmugglersCompartment'), 1);
                    02=ItemSize(item, ItemSize(item) + (ItemSize(item) * 25) / 100);
                    03=HullHP(item, ItemSize(item));
                    04=if(UselessItemData(item, 1) >= 1 && UselessItemData(item, 1) <= 3)
                    04 ^{
                        01=MessageBox('В новом отсеке вы обнаружили партию контрабандного <color=0,50,200>оружия</color>.');
                        02=ShipGoods(Player(), t_Arms, GoodsCount(Player(), t_Arms) + UselessItemData(item, 2));
                    }
                    05=else if(UselessItemData(item, 1) == 4 || UselessItemData(item, 1) == 5)
                    05 ^{
                        01=MessageBox('В новом отсеке вы обнаружили партию контрабандной <color=0,50,200>роскоши</color>.');
                        02=ShipGoods(Player(), t_Luxury, GoodsCount(Player(), t_Luxury) + UselessItemData(item, 2));
                    }
                    06=else if(UselessItemData(item, 1) == 6)
                    06 ^{
                        01=MessageBox('В новом отсеке вы обнаружили партию контрабандных <color=0,50,200>наркотиков</color>.');
                        02=ShipGoods(Player(), t_Narcotics, GoodsCount(Player(), t_Narcotics) + UselessItemData(item, 2));
                    }
                    07=ItemCost(item, ItemCost(item) + (ItemCost(CurItem()) / 2));
                    08=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=65
        Text=Отсек для перевозки запрещённого груза, экстренно сброшенный неизвестным контрабандистом, вероятнее всего, в попытках уйти от сил закона.<br>При установке добавляет кораблю специальный отсек, значительно расширяющий его изначальную вместимость. Дополнительный отсек защищён от сканирования, но, к сожалению, не несёт на себе никакой брони, а потому становится ослабленной зоной корпуса.
        Text=<clr><clrEnd>
        Text=Размер корпуса: <color=255,240,100>+25%</color>
        Text=Восприимчивость к урону: <color=255,240,100>+15%</color>
        TextBlackMarket=Внешний отсек для скрытной перевозки<br>запрещённого груза.<br>При установке добавляет кораблю специальный отсек, значительно расширяющий его изначальную вместимость. Дополнительный отсек защищён от сканирования, но, к сожалению, не несёт на себе никакой брони, а потому становится ослабленной<br>зоной корпуса.
        TextBlackMarket=<clr><clrEnd>
        TextBlackMarket=Размер корпуса: <color=255,240,100>+25%</color>
        TextBlackMarket=Восприимчивость к урону: <color=255,240,100>+15%</color>
    }
    Hyperlink ^{
        Cost=Huge
        FindItemInGalaxy ^{
            01=dword cur_star = ShipStar(Player());
            02=dword place = 0;
            03=for(int i = 0; i < GalaxyStars(); i = i + 1)
            03 ^{
                01=dword star = StarNearbyStars(cur_star, i);
                02=if(ItemIn(other_part, star))
                02 ^{
                    01=for(int j = StarItems(star) - 1; j >= 0; j = j - 1)
                    01 ^{
                        01=if(StarItems(star, j) == other_part)
                        01 ^{
                            01=place = star;
                            02=exit;
                        }
                    }
                }
                03=else
                03 ^{
                    01=for(j = StarShips(star) - 1; j >= 0; j = j - 1)
                    01 ^{
                        01=dword ship = StarShips(star, j);
                        02=if(~FindItemInShip(ship, other_part))
                        02 ^{
                            01=place = ship;
                            02=exit;
                        }
                    }
                    02=for(j = StarPlanets(star) - 1; j >= 0; j = j - 1)
                    02 ^{
                        01=dword planet = StarPlanets(star, j);
                        02=for(int k = PlanetWarriors(planet) - 1; k >= 0; k = k - 1)
                        02 ^{
                            01=ship = PlanetWarriors(planet, k);
                            02=if(~FindItemInShip(ship, other_part))
                            02 ^{
                                01=place = ship;
                                02=exit;
                            }
                        }
                        03=for(k = PlanetItems(planet) - 1; k >= 0; k = k - 1)
                        03 ^{
                            01=if(PlanetItems(planet, k) == other_part) exit;
                            01 ^{
                                01=exit;
                            }
                        }
                    }
                }
            }
        }
        HyperlinkItemMovedShip=Предмет <Item> успешно перемещён в трюм к <Ship>.
        HyperlinkItemMovedStar=Предмет <Item> успешно перемещён в систему <Star>.
        HyperlinkItemMovedStoragePlanet=Предмет <Item> успешно перемещён на склад планеты <Planet>.
        HyperlinkItemMovedStorageStation=Предмет <Item> успешно перемещён на склад <Station>.
        HyperlinkMergeConfirm=Вы уверены, что хотите вновь объединить <clr>Гиперлинк<clrEnd> без переноса предмета?
        HyperlinkMerged=Артефакт <clr>Гиперлинк<clrEnd> вновь объединился и вернулся в изначальное состояние.
        HyperlinkSeparated=Артефакт <clr>Гиперлинк<clrEnd> успешно разделён.
        InPhysGunChamber=в пусковой камере <color=255,240,100>физгана</color>
        InShipHold=в трюме корабля <Ship> в системе <Star>
        InShipHoldHyper=в трюме корабля <Ship>, что сейчас в гиперпространстве
        InSpace=в открытом космосе посреди системы <Star>
        InStationHold=в трюме <Station> в системе <Star>
        InStationHoldHyper=в трюме <Station>, что сейчас в гиперпространстве
        InStoragePlanet=на складе планеты <Planet> в системе <Star>
        InStorageStation=на складе <Station> в системе <Star>
        InStorageStationHyper=на складе <Station>, что сейчас в гиперпространстве
        InTrancHold=в трюме робота <Ship> в системе <Star>
        InTrancHoldHyper=в трюме робота <Ship>, что сейчас в гиперпространстве
        InYourHand=в <color=255,240,100>вашей руке</color>
        KellerExchange=2
        KellerValue=150
        LocationUnknown=в неизвестном месте
        Name=Гиперлинк
        OnActCode ^{
            01=dword other_part = GetItemFromVault('HyperlinkPart' + UselessItemData(CurItem(), 1));
            02=if(other_part) FreeItem(other_part);
        }
        OnActCodeTypes=t_OnItemDestroy
        OnUseCode ^{
            01=dword cur_part = CurItem();
            02=CanSellItem(cur_part, 0);
            03=int cost = ItemCost(cur_part) / 2;
            04=int size = ItemSize(cur_part) / 2;
            05=ItemCost(cur_part, cost);
            06=ItemSize(cur_part, size);
            07=EquipmentImageName(cur_part, 'HyperlinkFirstPart');
            08=SetName(cur_part, CT('UselessItems.HyperlinkFirstPart.Name'));
            09=dword other_part = GetItemFromVault('HyperlinkPart' + UselessItemData(cur_part, 1));
            10=if(other_part) EquipmentImageName(other_part, 'HyperlinkSecondPart');
            11=else
            11 ^{
                01=other_part = CreateQuestItem('HyperlinkSecondPart', -1);
                02=LinkItemToScript(other_part);
            }
            12=CanSellItem(other_part, 0);
            13=ItemCost(other_part, cost);
            14=ItemSize(other_part, size);
            15=AddItemToShip(FormCurShip(), other_part);
            16=UselessItemData(cur_part, 1, Id(other_part));
            17=UselessItemData(other_part, 1, Id(cur_part));
            18=Sound('Sound.HyperlinkSeparated');
            19=MessageBox(CT('UselessItems.Hyperlink.HyperlinkSeparated'));
        }
        Owner=Gaal
        Size=8
        Text=Древний гаальский артефакт, технология создания которого давно утеряна. Состоит из двух взаимозависимых частиц, при удалении друг от друга которых, те моментально объединяются вновь, игнорируя законы пространства и времени. Единственный способ разделить такие частицы - заключить каждую из них в индивидуальное темпоральное поле. При отключении темпорального поля частица сразу же перенесётся к своей паре, попутно прихватив с собой небольшую часть окружающего пространства, что позволяет использовать разделённый <color=255,240,100>гиперлинк</color> в качестве <color=255,240,100>двухстороннего телепорта</color>.
        TextPart=Одна из двух частиц артефакта <color=255,240,100>гиперлинк</color>, изолированная в темпоральном поле, но всё равно стремящаяся объединиться со своей парой. Может быть использована для мгновенного <color=255,240,100>переноса предмета</color> к другой частице, в данный момент находящейся <Place>.
    }
    HyperlinkFirstPart ^{
        Cost=Big
        Name=Отделённая частица гиперлинка
        NoDelivery=1
        OnActCode ^{
            01=if(ScriptItemActionType(t_OnShowingItemInfo))
            01 ^{
                01=dword other_part = IdToItem(UselessItemData(CurItem(), 1));
                02=if(!other_part && FormShipCurItem())
                02 ^{
                    01=other_part = FormShipCurItem();
                    02=if(Id(other_part) != UselessItemData(CurItem(), 1)) other_part = 0;
                }
                03=dword place = FindItemInStorage(other_part);
                04=if(~int(place))
                04 ^{
                    01=place = StorageItemLocation(place);
                    02=if(ObjectType(place) == 3)
                    02 ^{
                        01=str text = Format(CT('UselessItems.Hyperlink.InStoragePlanet'), '<Planet'+'>', Name(place), '<Star'+'>', Name(PlanetToStar(place)));
                    }
                    03=else
                    03 ^{
                        01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InStorageStation'), '<Station'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                        02=else text = Format(CT('UselessItems.Hyperlink.InStorageStationHyper'), '<Station'+'>', Name(place));
                    }
                }
                05=else
                05 ^{
                    01=if(FormShipCurItem() == other_part) text = CT('UselessItems.Hyperlink.InYourHand');
                    02=else
                    02 ^{
                        01=place = ExecuteCodeFromString(GenerateCodeStringFromBlock('UselessItems.Hyperlink.FindItemInGalaxy'), 'other_part', other_part, 'place');
                        02=if(place)
                        02 ^{
                            01=if(ObjectType(place) == 5)
                            01 ^{
                                01=if(ShipTypeN(place) != t_Tranclucator)
                                01 ^{
                                    01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InShipHold'), '<Ship'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                                    02=else text = Format(CT('UselessItems.Hyperlink.InShipHoldHyper'), '<Ship'+'>', Name(place));
                                }
                                02=else
                                02 ^{
                                    01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InTrancHold'), '<Ship'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                                    02=else text = Format(CT('UselessItems.Hyperlink.InTrancHoldHyper'), '<Ship'+'>', Name(place));
                                }
                            }
                            02=else if(ObjectType(place) == 4)
                            02 ^{
                                01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InStationHold'), '<Station'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                                02=else text = Format(CT('UselessItems.Hyperlink.InStationHoldHyper'), '<Station'+'>', Name(place));
                            }
                            03=else if(ObjectType(place) == 1) text = Format(CT('UselessItems.Hyperlink.InSpace'), '<Star'+'>', Name(place));
                            04=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnShowingItemInfo!';
                        }
                        03=else
                        03 ^{
                            01=dword item = GetItemFromVault('PhysGunChamber', 0);
                            02=if(item)
                            02 ^{
                                01=if(item == other_part) text = CT('UselessItems.Hyperlink.InPhysGunChamber');
                                02=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnShowingItemInfo!';
                            }
                            03=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnShowingItemInfo!';
                        }
                    }
                }
                06=UselessItemText(CurItem(), Format(CT('UselessItems.Hyperlink.TextPart'), '<Place'+'>', text, ''));
            }
            02=else if(ScriptItemActionType(t_OnCheckingUsability) || ScriptItemActionType(t_OnAnotherItem))
            02 ^{
                01=item = ScriptItemActObject1();
                02=if(NoDropItem(item))
                02 ^{
                    01=if(ScriptItemActionType(t_OnCheckingUsability)) exit;
                    02=else
                    02 ^{
                        01=if(NoDropItem(item) == 1) text = CT('FormShip.NoDrop');
                        02=else text = CT('FormShip.NoDrop' + NoDropItem(item));
                        03=if(ParsCountFromString(text, '|') > 1) MessageBox(GetParFromString(text, '|', 1, 0), GetParFromString(text, '|', 0, 1));
                        04=else MessageBox(text);
                        05=exit;
                    }
                }
                03=dword cur_part = CurItem();
                04=other_part = IdToItem(UselessItemData(cur_part, 1));
                05=if(other_part == GetItemFromVault('PhysGunChamber', 0)) exit;
                06=int item_type = ItemType(item);
                07=if(item_type == t_Hull || item_type == t_UselessCountableItem || item_type == t_Protoplasm)
                07 ^{
                    01=ScriptItemActParam(0);
                    02=exit;
                }
                08=if(item_type == t_CustomWeapon)
                08 ^{
                    01=if(CustomWeaponType(item) == 'PhysGun') exit;
                }
                09=if(ScriptItemActionType(t_OnCheckingUsability))
                09 ^{
                    01=ScriptItemActParam(1);
                    02=exit;
                }
                10=if(Id(item) == UselessItemData(cur_part, 1))
                10 ^{
                    01=ExecuteCodeFromString(GenerateCodeStringFromBlock('UselessItems.HyperlinkFirstPart.OnUseCode'));
                    02=exit;
                }
                11=dword cur_ship = FormCurShip();
                12=CanSellItem(other_part, 1);
                13=ItemCost(other_part, ItemCost(other_part) * 2);
                14=ItemSize(other_part, ItemSize(other_part) * 2);
                15=EquipmentImageName(other_part, 'Hyperlink');
                16=SetName(other_part, CT('UselessItems.Hyperlink.Name'));
                17=UselessItemText(other_part, CT('UselessItems.Hyperlink.Text'));
                18=ScriptItemActParam(2);
                19=FormShipCurItem('Detach');
                20=UselessItemData(other_part, 1, Id(cur_part));
                21=PutItemInVault('HyperlinkPart' + Id(cur_part), cur_part);
                22=if(~FindItemInShip(cur_ship, item))
                22 ^{
                    01=if(ItemType(item) > t_ArtFastRacks) GetItemFromShip(cur_ship, item);
                    02=else GetArtFromShip(cur_ship, item);
                }
                23=else GetItemFromStorage(FindItemInStorage(item));
                24=place = FindItemInStorage(other_part);
                25=if(~int(place))
                25 ^{
                    01=place = StorageItemLocation(place);
                    02=AddItemToStorage(place, item);
                    03=if(ObjectType(place) == 3) text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedStoragePlanet'), '<Item'+'>', DeleteTags(Name(item)), '<Planet'+'>', Name(place));
                    04=else text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedStorageStation'), '<Item'+'>', DeleteTags(Name(item)), '<Station'+'>', Name(place));
                }
                26=else
                26 ^{
                    01=place = ExecuteCodeFromString(GenerateCodeStringFromBlock('UselessItems.Hyperlink.FindItemInGalaxy'), 'other_part', other_part, 'place');
                    02=if(ObjectType(place) == 5 || ObjectType(place) == 4)
                    02 ^{
                        01=AddItemToShip(place, item);
                        02=text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedShip'), '<Item'+'>', DeleteTags(Name(item)), '<Ship'+'>', Name(place));
                    }
                    03=else if(ObjectType(place) == 1)
                    03 ^{
                        01=int coordX = CoordX(other_part) + RndObject(-33, 33, cur_ship);
                        02=int coordY = CoordY(other_part) + RndObject(-33, 33, cur_ship);
                        03=DropItemInSystem(place, item, coordX, coordY, coordX, coordY);
                        04=StopMovingItem(place, item);
                        05=CreateActCodeEvent(t_OnDropItemFixed, item, cur_ship, item, place, 0);
                        06=text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedStar'), '<Item'+'>', DeleteTags(Name(item)), '<Star'+'>', Name(place));
                    }
                    04=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnAnotherItem!';
                }
                27=Sound('Sound.HyperlinkMerged');
                28=MessageBox(CT('UselessItems.Hyperlink.HyperlinkMerged') + ' ' + text);
            }
            03=else if(ScriptItemActionType(t_OnItemHit))
            03 ^{
                01=cur_part = CurItem();
                02=if(FilmFlags(0))
                02 ^{
                    01=ShowStaticEffect('HyperlinkTransfer', CoordX(cur_part), CoordY(cur_part), 15);
                    02=ShowEffect('Weapon.NoGraph', 0, cur_part, 0, 0, 8, 0);
                    03=CoordX(cur_part, 0);
                    04=CoordY(cur_part, 0);
                    05=ItemDestroy(cur_part, -1);
                }
            }
            04=else
            04 ^{
                01=other_part = IdToItem(UselessItemData(CurItem(), 1));
                02=if(other_part)
                02 ^{
                    01=CanSellItem(other_part, 1);
                    02=ItemCost(other_part, ItemCost(other_part) * 2);
                    03=ItemSize(other_part, ItemSize(other_part) * 2);
                    04=EquipmentImageName(other_part, 'Hyperlink');
                    05=SetName(other_part, CT('UselessItems.Hyperlink.Name'));
                    06=UselessItemText(other_part, CT('UselessItems.Hyperlink.Text'));
                    07=if(~FindItemInShip(Player(), other_part))
                    07 ^{
                        01=Sound('Sound.HyperlinkMerged');
                        02=Ether(0, '', CT('UselessItems.Hyperlink.HyperlinkMerged'));
                    }
                    08=else
                    08 ^{
                        01=item = GetItemFromVault('PhysGunChamber', 0);
                        02=if(other_part == item)
                        02 ^{
                            01=dword phys_gun = GetValueFromScript('Mod_ExpPhysGun_AfterQuestDone', 'PhysGun');
                            02=if(!phys_gun) phys_gun = GetValueFromScript('Mod_DevKit', 'PhysGun');
                            03=SpecialToEquipment(FindBonusByNameInCfg('ExpPhysGun_PhysGunMissileHyperlink'), phys_gun);
                            04=int new_size = ItemSize(other_part);
                            05=ItemSize(phys_gun, ItemSize(phys_gun) - ScriptItemTextData(phys_gun, 1) + new_size);
                            06=ScriptItemTextData(phys_gun, 1, ItemSize(other_part));
                            07=SetEquipmentStats(phys_gun, new_size - 1, 1);
                            08=SetEquipmentStats(phys_gun, new_size, 0);
                        }
                    }
                }
            }
        }
        OnActCodeTypes=t_OnShowingItemInfo,t_OnCheckingUsability,t_OnAnotherItem,t_OnItemHit,t_OnItemDestroy
        OnUseCode ^{
            01=if(!MessageBoxYesNo(CT('UselessItems.Hyperlink.HyperlinkMergeConfirm'))) exit;
            02=dword cur_part = CurItem();
            03=UselessItemData(other_part, 1, Id(cur_part));
            04=if(FormShipCurItem() == cur_part)
            04 ^{
                01=ScriptItemActParam(2);
                02=FormShipCurItem('Detach');
            }
            05=else
            05 ^{
                01=if(~FindItemInShip(FormCurShip(), cur_part)) GetItemFromShip(FormCurShip(), cur_part);
                02=else GetItemFromStorage(FindItemInStorage(cur_part));
            }
            06=PutItemInVault('HyperlinkPart' + Id(cur_part), cur_part);
            07=dword other_part = IdToItem(UselessItemData(cur_part, 1));
            08=CanSellItem(other_part, 1);
            09=ItemCost(other_part, ItemCost(other_part) * 2);
            10=ItemSize(other_part, ItemSize(other_part) * 2);
            11=EquipmentImageName(other_part, 'Hyperlink');
            12=SetName(other_part, CT('UselessItems.Hyperlink.Name'));
            13=UselessItemText(other_part, CT('UselessItems.Hyperlink.Text'));
            14=dword item = GetItemFromVault('PhysGunChamber', 0);
            15=if(other_part == item)
            15 ^{
                01=dword phys_gun = GetValueFromScript('Mod_ExpPhysGun_AfterQuestDone', 'PhysGun');
                02=if(!phys_gun) phys_gun = GetValueFromScript('Mod_DevKit', 'PhysGun');
                03=SpecialToEquipment(FindBonusByNameInCfg('ExpPhysGun_PhysGunMissileHyperlink'), phys_gun);
                04=int new_size = ItemSize(other_part);
                05=ItemSize(phys_gun, ItemSize(phys_gun) - ScriptItemTextData(phys_gun, 1) + new_size);
                06=ScriptItemTextData(phys_gun, 1, ItemSize(other_part));
                07=SetEquipmentStats(phys_gun, new_size - 1, 1);
                08=SetEquipmentStats(phys_gun, new_size, 0);
            }
            16=Sound('Sound.HyperlinkMerged');
            17=MessageBox(CT('UselessItems.Hyperlink.HyperlinkMerged'));
        }
        Owner=Gaal
        Size=4
    }
    HyperlinkSecondPart ^{
        Cost=Big
        Name=Отделённая частица гиперлинка
        NoDelivery=1
        OnActCode ^{
            01=if(ScriptItemActionType(t_OnShowingItemInfo))
            01 ^{
                01=dword other_part = IdToItem(UselessItemData(CurItem(), 1));
                02=if(!other_part && FormShipCurItem())
                02 ^{
                    01=other_part = FormShipCurItem();
                    02=if(Id(other_part) != UselessItemData(CurItem(), 1)) other_part = 0;
                }
                03=dword place = FindItemInStorage(other_part);
                04=if(~int(place))
                04 ^{
                    01=place = StorageItemLocation(place);
                    02=if(ObjectType(place) == 3)
                    02 ^{
                        01=str text = Format(CT('UselessItems.Hyperlink.InStoragePlanet'), '<Planet'+'>', Name(place), '<Star'+'>', Name(PlanetToStar(place)));
                    }
                    03=else
                    03 ^{
                        01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InStorageStation'), '<Station'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                        02=else text = Format(CT('UselessItems.Hyperlink.InStorageStationHyper'), '<Station'+'>', Name(place));
                    }
                }
                05=else
                05 ^{
                    01=if(FormShipCurItem() == other_part) text = CT('UselessItems.Hyperlink.InYourHand');
                    02=else
                    02 ^{
                        01=place = ExecuteCodeFromString(GenerateCodeStringFromBlock('UselessItems.Hyperlink.FindItemInGalaxy'), 'other_part', other_part, 'place');
                        02=if(place)
                        02 ^{
                            01=if(ObjectType(place) == 5)
                            01 ^{
                                01=if(ShipTypeN(place) != t_Tranclucator)
                                01 ^{
                                    01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InShipHold'), '<Ship'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                                    02=else text = Format(CT('UselessItems.Hyperlink.InShipHoldHyper'), '<Ship'+'>', Name(place));
                                }
                                02=else
                                02 ^{
                                    01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InTrancHold'), '<Ship'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                                    02=else text = Format(CT('UselessItems.Hyperlink.InTrancHoldHyper'), '<Ship'+'>', Name(place));
                                }
                            }
                            02=else if(ObjectType(place) == 4)
                            02 ^{
                                01=if(!ShipInHyperSpace(place)) text = Format(CT('UselessItems.Hyperlink.InStationHold'), '<Station'+'>', Name(place), '<Star'+'>', Name(ShipStar(place)));
                                02=else text = Format(CT('UselessItems.Hyperlink.InStationHoldHyper'), '<Station'+'>', Name(place));
                            }
                            03=else if(ObjectType(place) == 1) text = Format(CT('UselessItems.Hyperlink.InSpace'), '<Star'+'>', Name(place));
                            04=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnShowingItemInfo!';
                        }
                        03=else
                        03 ^{
                            01=dword item = GetItemFromVault('PhysGunChamber', 0);
                            02=if(item)
                            02 ^{
                                01=if(item == other_part) text = CT('UselessItems.Hyperlink.InPhysGunChamber');
                                02=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnShowingItemInfo!';
                            }
                            03=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnShowingItemInfo!';
                        }
                    }
                }
                06=UselessItemText(CurItem(), Format(CT('UselessItems.Hyperlink.TextPart'), '<Place'+'>', text, ''));
            }
            02=else if(ScriptItemActionType(t_OnCheckingUsability) || ScriptItemActionType(t_OnAnotherItem))
            02 ^{
                01=item = ScriptItemActObject1();
                02=if(NoDropItem(item))
                02 ^{
                    01=if(ScriptItemActionType(t_OnCheckingUsability)) exit;
                    02=else
                    02 ^{
                        01=if(NoDropItem(item) == 1) text = CT('FormShip.NoDrop');
                        02=else text = CT('FormShip.NoDrop' + NoDropItem(item));
                        03=if(ParsCountFromString(text, '|') > 1) MessageBox(GetParFromString(text, '|', 1, 0), GetParFromString(text, '|', 0, 1));
                        04=else MessageBox(text);
                        05=exit;
                    }
                }
                03=dword cur_part = CurItem();
                04=other_part = IdToItem(UselessItemData(cur_part, 1));
                05=if(other_part == GetItemFromVault('PhysGunChamber', 0)) exit;
                06=int item_type = ItemType(item);
                07=if(item_type == t_Hull || item_type == t_UselessCountableItem || item_type == t_Protoplasm)
                07 ^{
                    01=ScriptItemActParam(0);
                    02=exit;
                }
                08=if(item_type == t_CustomWeapon)
                08 ^{
                    01=if(CustomWeaponType(item) == 'PhysGun') exit;
                }
                09=if(ScriptItemActionType(t_OnCheckingUsability))
                09 ^{
                    01=ScriptItemActParam(1);
                    02=exit;
                }
                10=if(Id(item) == UselessItemData(cur_part, 1))
                10 ^{
                    01=ExecuteCodeFromString(GenerateCodeStringFromBlock('UselessItems.HyperlinkSecondPart.OnUseCode'));
                    02=exit;
                }
                11=dword cur_ship = FormCurShip();
                12=CanSellItem(other_part, 1);
                13=ItemCost(other_part, ItemCost(other_part) * 2);
                14=ItemSize(other_part, ItemSize(other_part) * 2);
                15=EquipmentImageName(other_part, 'Hyperlink');
                16=SetName(other_part, CT('UselessItems.Hyperlink.Name'));
                17=UselessItemText(other_part, CT('UselessItems.Hyperlink.Text'));
                18=ScriptItemActParam(2);
                19=FormShipCurItem('Detach');
                20=UselessItemData(other_part, 1, Id(cur_part));
                21=PutItemInVault('HyperlinkPart' + Id(cur_part), cur_part);
                22=if(~FindItemInShip(cur_ship, item))
                22 ^{
                    01=if(ItemType(item) > t_ArtFastRacks) GetItemFromShip(cur_ship, item);
                    02=else GetArtFromShip(cur_ship, item);
                }
                23=else GetItemFromStorage(FindItemInStorage(item));
                24=place = FindItemInStorage(other_part);
                25=if(~int(place))
                25 ^{
                    01=place = StorageItemLocation(place);
                    02=AddItemToStorage(place, item);
                    03=if(ObjectType(place) == 3) text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedStoragePlanet'), '<Item'+'>', DeleteTags(Name(item)), '<Planet'+'>', Name(place));
                    04=else text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedStorageStation'), '<Item'+'>', DeleteTags(Name(item)), '<Station'+'>', Name(place));
                }
                26=else
                26 ^{
                    01=place = ExecuteCodeFromString(GenerateCodeStringFromBlock('UselessItems.Hyperlink.FindItemInGalaxy'), 'other_part', other_part, 'place');
                    02=if(ObjectType(place) == 5 || ObjectType(place) == 4)
                    02 ^{
                        01=AddItemToShip(place, item);
                        02=text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedShip'), '<Item'+'>', DeleteTags(Name(item)), '<Ship'+'>', Name(place));
                    }
                    03=else if(ObjectType(place) == 1)
                    03 ^{
                        01=int coordX = CoordX(other_part) + RndObject(-33, 33, cur_ship);
                        02=int coordY = CoordY(other_part) + RndObject(-33, 33, cur_ship);
                        03=DropItemInSystem(place, item, coordX, coordY, coordX, coordY);
                        04=StopMovingItem(place, item);
                        05=CreateActCodeEvent(t_OnDropItemFixed, item, cur_ship, item, place, 0);
                        06=text = Format(CT('UselessItems.Hyperlink.HyperlinkItemMovedStar'), '<Item'+'>', DeleteTags(Name(item)), '<Star'+'>', Name(place));
                    }
                    04=else throw 'Unknown HyperlinkPart location in Hyperlink Lang code: t_OnAnotherItem!';
                }
                27=Sound('Sound.HyperlinkMerged');
                28=MessageBox(CT('UselessItems.Hyperlink.HyperlinkMerged') + ' ' + text);
            }
            03=else if(ScriptItemActionType(t_OnItemHit))
            03 ^{
                01=cur_part = CurItem();
                02=if(FilmFlags(0))
                02 ^{
                    01=ShowStaticEffect('HyperlinkTransfer', CoordX(cur_part), CoordY(cur_part), 15);
                    02=ShowEffect('Weapon.NoGraph', 0, cur_part, 0, 0, 8, 0);
                    03=CoordX(cur_part, 0);
                    04=CoordY(cur_part, 0);
                    05=ItemDestroy(cur_part, -1);
                }
            }
            04=else
            04 ^{
                01=other_part = IdToItem(UselessItemData(CurItem(), 1));
                02=if(other_part)
                02 ^{
                    01=CanSellItem(other_part, 1);
                    02=ItemCost(other_part, ItemCost(other_part) * 2);
                    03=ItemSize(other_part, ItemSize(other_part) * 2);
                    04=EquipmentImageName(other_part, 'Hyperlink');
                    05=SetName(other_part, CT('UselessItems.Hyperlink.Name'));
                    06=UselessItemText(other_part, CT('UselessItems.Hyperlink.Text'));
                    07=if(~FindItemInShip(Player(), other_part))
                    07 ^{
                        01=Sound('Sound.HyperlinkMerged');
                        02=Ether(0, '', CT('UselessItems.Hyperlink.HyperlinkMerged'));
                    }
                    08=else
                    08 ^{
                        01=item = GetItemFromVault('PhysGunChamber', 0);
                        02=if(other_part == item)
                        02 ^{
                            01=dword phys_gun = GetValueFromScript('Mod_ExpPhysGun_AfterQuestDone', 'PhysGun');
                            02=if(!phys_gun) phys_gun = GetValueFromScript('Mod_DevKit', 'PhysGun');
                            03=SpecialToEquipment(FindBonusByNameInCfg('ExpPhysGun_PhysGunMissileHyperlink'), phys_gun);
                            04=int new_size = ItemSize(other_part);
                            05=ItemSize(phys_gun, ItemSize(phys_gun) - ScriptItemTextData(phys_gun, 1) + new_size);
                            06=ScriptItemTextData(phys_gun, 1, ItemSize(other_part));
                            07=SetEquipmentStats(phys_gun, new_size - 1, 1);
                            08=SetEquipmentStats(phys_gun, new_size, 0);
                        }
                    }
                }
            }
        }
        OnActCodeTypes=t_OnShowingItemInfo,t_OnCheckingUsability,t_OnAnotherItem,t_OnItemHit,t_OnItemDestroy
        OnUseCode ^{
            01=if(!MessageBoxYesNo(CT('UselessItems.Hyperlink.HyperlinkMergeConfirm'))) exit;
            02=dword cur_part = CurItem();
            03=UselessItemData(other_part, 1, Id(cur_part));
            04=if(FormShipCurItem() == cur_part)
            04 ^{
                01=ScriptItemActParam(2);
                02=FormShipCurItem('Detach');
            }
            05=else
            05 ^{
                01=if(~FindItemInShip(FormCurShip(), cur_part)) GetItemFromShip(FormCurShip(), cur_part);
                02=else GetItemFromStorage(FindItemInStorage(cur_part));
            }
            06=PutItemInVault('HyperlinkPart' + Id(cur_part), cur_part);
            07=dword other_part = IdToItem(UselessItemData(cur_part, 1));
            08=CanSellItem(other_part, 1);
            09=ItemCost(other_part, ItemCost(other_part) * 2);
            10=ItemSize(other_part, ItemSize(other_part) * 2);
            11=EquipmentImageName(other_part, 'Hyperlink');
            12=SetName(other_part, CT('UselessItems.Hyperlink.Name'));
            13=UselessItemText(other_part, CT('UselessItems.Hyperlink.Text'));
            14=dword item = GetItemFromVault('PhysGunChamber', 0);
            15=if(other_part == item)
            15 ^{
                01=dword phys_gun = GetValueFromScript('Mod_ExpPhysGun_AfterQuestDone', 'PhysGun');
                02=if(!phys_gun) phys_gun = GetValueFromScript('Mod_DevKit', 'PhysGun');
                03=SpecialToEquipment(FindBonusByNameInCfg('ExpPhysGun_PhysGunMissileHyperlink'), phys_gun);
                04=int new_size = ItemSize(other_part);
                05=ItemSize(phys_gun, ItemSize(phys_gun) - ScriptItemTextData(phys_gun, 1) + new_size);
                06=ScriptItemTextData(phys_gun, 1, ItemSize(other_part));
                07=SetEquipmentStats(phys_gun, new_size - 1, 1);
                08=SetEquipmentStats(phys_gun, new_size, 0);
            }
            16=Sound('Sound.HyperlinkMerged');
            17=MessageBox(CT('UselessItems.Hyperlink.HyperlinkMerged'));
        }
        Owner=Gaal
        Size=4
    }
    Null-generator ^{
        CanBeABDrop=1
        CanBeReward=1
        CanBeTreasure=0
        Cost=Huge
        Description=Нуль-генератор - одноразовое, но крайне полезное устройство, позволяющее вам выполнить моментальное перемещение из любой точки пространства. Искривляет темпоральное поле вокруг корабля и убирает гравитационные помехи из прыжкового контура двигателя, тем самым позволяя совершить практически мгновенный нуль-переход.
        KellerExchange=2
        KellerValue=50
        Name=Нуль-генератор
        OnActCode ^{
            01=dword cur_item = CurItem();
            02=if(ScriptItemActionType(t_OnReEnteringForm))
            02 ^{
                01=dword cur_ship = FormCurShip();
                02=if(UselessItemData(cur_item, 1))
                02 ^{
                    01=RunChildForm('Galaxy');
                    02=if(ShipOrder(cur_ship) == 7)
                    02 ^{
                        01=ShipOrderData1(Player(), 1);
                        02=ForceNextDay();
                        03=ButtonClick('Ship', 'Exit');
                    }
                }
            }
            03=else
            03 ^{
                01=cur_ship = ScriptItemActShip();
                02=if(UselessItemData(cur_item, 1))
                02 ^{
                    01=UselessItemData(cur_item, 1, 0);
                    02=FreeItem(GetItemFromShip(cur_ship, cur_item));
                }
            }
        }
        OnActCodeTypes=t_OnStep,t_OnReEnteringForm
        OnActStepTypes=11
        OnUseCode ^{
            01=if(!ShipInNormalSpace(Player()))
            01 ^{
                01=MessageBox(CT('FormShip.UseOnlyInSpace'));
                02=exit;
            }
            02=if(MessageBoxYesNo('Вы уверены, что хотите совершить нуль-переход? При переходе нуль-генератор <color=0,50,200>будет потерян</color>.'))
            02 ^{
                01=UselessItemData(CurItem(), 1, 1);
            }
        }
        Owner=None
        Size=5
        Text=Искривляет темпоральное поле вокруг корабля и убирает гравитационные помехи из прыжкового контура двигателя, тем самым позволяя совершить <color=255,240,100>нуль-переход из любой точки</color> пространства. К сожалению, после первого же подобного перехода источник питания генератора полностью истощается, а потому использовать устройство повторно физически невозможно.
    }
    Quark_bomb ^{
        Cost=Big
        Name=Кварковая бомба
        OnActCode ^{
            01=dword bomb = CurItem();
            02=int primer_type = UselessItemData(bomb, 2);
            03=if(primer_type == 1) exit;
            04=int boom_flag = 0;
            05=if(ScriptItemActionType(t_OnStep))
            05 ^{
                01=if(ScriptItemActParam() == 5)
                01 ^{
                    01=if(primer_type == -5 || primer_type <= -7)
                    01 ^{
                        01=if(UselessItemData(bomb, 1) > 0)
                        01 ^{
                            01=if(UselessItemData(bomb, 1) == 1) boom_flag = 1;
                            02=else UselessItemData(bomb, 1, UselessItemData(bomb, 1) - 1);
                        }
                        02=if(primer_type == -5)
                        02 ^{
                            01=primer_type = -6;
                            02=UselessItemData(bomb, 2, -6);
                        }
                        03=else if(primer_type == -7)
                        03 ^{
                            01=primer_type = -9;
                            02=UselessItemData(bomb, 2, -9);
                        }
                    }
                }
                02=if(primer_type == -6 || primer_type == -9)
                02 ^{
                    01=if(!boom_flag)
                    01 ^{
                        01=bomb_star = ScriptItemActObject1();
                        02=for(int i = StarShips(bomb_star) - 1; i >= 0; i = i - 1)
                        02 ^{
                            01=ship = StarShips(bomb_star, i);
                            02=if(Dist(bomb,ship) <= 70)
                            02 ^{
                                01=boom_flag = 2;
                                02=break;
                            }
                        }
                        03=if(!boom_flag)
                        03 ^{
                            01=for(i = StarRuins(bomb_star) - 1; i >= 0; i = i - 1)
                            01 ^{
                                01=ship = StarRuins(bomb_star, i);
                                02=if(Dist(bomb,ship) <= 70)
                                02 ^{
                                    01=boom_flag = 2;
                                    02=break;
                                }
                            }
                        }
                    }
                }
            }
            06=else if(ScriptItemActionType(t_OnDropItem) || ScriptItemActionType(t_OnDropItemFixed))
            06 ^{
                01=if(ScriptItemActObject1() == bomb)
                01 ^{
                    01=if(!ScriptItemActObject2()) UselessItemData(bomb, 3, Id(ShipStar(ScriptItemActShip())) - 1);
                    02=else UselessItemData(bomb, 3, Id(ScriptItemActObject2()) - 1);
                    03=if(primer_type == 0)
                    03 ^{
                        01=primer_type = -4;
                        02=UselessItemData(bomb, 2, -4);
                    }
                    04=else if(primer_type == -1)
                    04 ^{
                        01=primer_type = -5;
                        02=UselessItemData(bomb, 2, -5);
                    }
                    05=else if(primer_type == -2)
                    05 ^{
                        01=UselessItemText(bomb, CT('UselessItems.' + EquipmentImageName(bomb) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.WillExplodeIn'));
                        02=primer_type = -8;
                        03=UselessItemData(bomb, 2, -8);
                    }
                    06=else if(primer_type == -3)
                    06 ^{
                        01=UselessItemText(bomb, CT('UselessItems.' + EquipmentImageName(bomb) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.WillExplodeIn'));
                        02=primer_type = -7;
                        03=UselessItemData(bomb, 2, -7);
                    }
                }
            }
            07=else if(ScriptItemActionType(t_OnItemPickUp))
            07 ^{
                01=if(ScriptItemActObject1() == bomb)
                01 ^{
                    01=if(primer_type == -4)
                    01 ^{
                        01=primer_type = 0;
                        02=UselessItemData(bomb, 2, 0);
                    }
                }
            }
            08=if(CurrentForm() == 'Ship') exit;
            09=if(ScriptItemActionType(t_OnItemHit)) boom_flag = (ItemType(ScriptItemActObject1()) == t_Weapon16 || ObjectType(ScriptItemActObject1()) == 7);
            10=else if(ScriptItemActionType(t_OnItemDestroy) || ScriptItemActionType(t_OnDeath)) boom_flag = (primer_type <= -4);
            11=else if(ScriptItemActionType(t_OnItemPickUp)) boom_flag = (ScriptItemActObject1() == bomb && primer_type <= -5);
            12=if(boom_flag)
            12 ^{
                01=dword bomb_star = GalaxyStar(UselessItemData(bomb, 3));
                02=int targetInfo = -2;
                03=int fuel_tank_imitation = (!ScriptItemActionType(t_OnStep) && ScriptItemActParam());
                04=int player_can_see = FilmFlags(0);
                05=if(ScriptItemActionType(t_OnItemHit))
                05 ^{
                    01=ItemDestroy(bomb, 0);
                    02=dword boom_ship = 0;
                }
                06=else boom_ship = ScriptItemActShip();
                07=if(boom_ship)
                07 ^{
                    01=bomb_star = ShipStar(boom_ship);
                    02=if(ScriptItemActionType(t_OnItemPickUp))
                    02 ^{
                        01=OrderNone(boom_ship);
                        02=ShipAddCustomShipInfo(boom_ship, 'DeadByHitInfo', 'NoShow', 6, t_UselessItem, Id(bomb), 'Quark_bomb');
                    }
                    03=UselessItemData(bomb, 2, -10);
                    04=UselessItemData(bomb, 3, Id(bomb_star) - 1);
                    05=DropItemInSystem(bomb_star, GetItemFromShip(boom_ship, bomb), CoordX(boom_ship) + 1000000, CoordY(boom_ship), CoordX(boom_ship) + 1000000, CoordY(boom_ship));
                    06=StopMovingItem(bomb_star, bomb);
                    07=ItemDestroy(bomb, 1);
                    08=OrderNone(boom_ship);
                    09=ShipDestroy(boom_ship, 1);
                    10=exit;
                }
                08=else
                08 ^{
                    01=if(primer_type == -10) CoordX(bomb, CoordX(bomb) - 1000000);
                    02=if(player_can_see)
                    02 ^{
                        01=if(ScriptItemActionType(t_OnItemHit))
                        01 ^{
                            01=if(ItemType(ScriptItemActObject1()) == t_Weapon16 || ObjectType(ScriptItemActObject1()) == 7)
                            01 ^{
                                01=if(ItemType(ScriptItemActObject1()) == t_Weapon16) ShowStaticEffect('Quark_bomb_SlowBAM', CoordX(bomb), CoordY(bomb));
                                02=if(ObjectType(ScriptItemActObject1()) == 7) ShowStaticEffect('Quark_bomb_FastBAM', CoordX(bomb), CoordY(bomb));
                            }
                        }
                        02=else ShowStaticEffect('Quark_bomb_BAM', CoordX(bomb), CoordY(bomb));
                    }
                }
                09=for(i = StarShips(bomb_star) - 1; i >= 0; i = i - 1)
                09 ^{
                    01=dword ship = StarShips(bomb_star, i);
                    02=if(HullHP(ship) <= 0) continue;
                    03=int Tdist = Dist(bomb, ship);
                    04=if(Tdist > 250) continue;
                    05=if(!ShipInNormalSpace(ship)) continue;
                    06=if(fuel_tank_imitation) int Tdamage = fuel_tank_imitation;
                    07=else
                    07 ^{
                        01=if(ShipType(ship) == 'KillerAsteroid') continue;
                        02=else Tdamage = round(800.0 - (400.0 * (Tdist * Tdist) / 62500));
                    }
                    08=Tdamage = CreateActCodeEvent(t_OnTakingDamage, ship, bomb, 0, Tdamage);
                    09=if(player_can_see) ShowEffect('Weapon.NoGraph', 0, ship, ship, Tdamage, 0, 0, 255,0,0);
                    09=if(HullHP(ship) > Tdamage) HullHP(ship, HullHP(ship) - Tdamage);
                    10=else
                    10 ^{
                        01=if(targetInfo == -2) targetInfo = ShipFindCustomShipInfoByType(ship, 'LifeboatLaunchInfo');
                        02=if(~targetInfo)
                        02 ^{
                            01=ShipCustomShipInfoTextData(ship, targetInfo, 3, bomb);
                            02=DealDamageToShip(ship, bomb, 1000000, 0);
                            03=OrderNone(ship);
                        }
                        03=else if(ShipFindCustomShipInfoByType(ship, 'AbandonedShipInfo') == -1)
                        03 ^{
                            01=NoDropToShip(ship, 1);
                            02=DealDamageToShip(ship, bomb, 1000000, 0);
                            03=if(HullHP(ship) <= 0)
                            03 ^{
                                01=OrderNone(ship);
                                02=NoDropToShip(ship, 0);
                                03=if(player_can_see)
                                03 ^{
                                    01=int type_n = ShipTypeN(ship);
                                    02=if(type_n > t_Tranclucator) ShowEffect('Weapon.NoGraph', 0, ship, ship, 0, 5, 0, 0,0,0);
                                    03=else if(type_n == t_Warrior && ShipSubType(ship) == 1) ShowEffect('Weapon.NoGraph', 0, ship, ship, 0, 5, 0, 0,0,0);
                                    04=else if(ShipSpecialBonuses(ship, bonAttacks) > 3) ShowEffect('Weapon.NoGraph', 0, ship, ship, 0, 5, 0, 0,0,0);
                                    05=else ShowEffect('Weapon.NoGraph', 0, ship, ship, 0, 1, 0, 0,0,0);
                                }
                            }
                            04=else NoDropToShip(ship, 0);
                        }
                    }
                }
                10=for(i = StarItems(bomb_star) - 1; i >= 0; i = i - 1)
                10 ^{
                    01=dword item = StarItems(bomb_star, i);
                    02=if(ItemDestroy(item)) continue;
                    03=if(item == bomb) continue;
                    04=if(Dist(bomb, item) > 250) continue;
                    05=else Tdist = Dist(bomb, item);
                    06=Tdamage = round(20.0 - (20.0 * (Tdist * Tdist) / 62500));
                    07=if(RndObject(1, 100, bomb_star) <= Tdamage)
                    07 ^{
                        01=if(ItemType(item) == t_ArtefactBomb)
                        01 ^{
                            01=if(player_can_see) ShowStaticEffect('Quark_bomb_BAM', CoordX(item), CoordY(item));
                            02=ItemDestroy(item, 1);
                        }
                        02=else ItemDestroy(item, 1);
                    }
                    08=else continue;
                }
                11=if(primer_type == -10) CoordX(bomb, CoordX(bomb) + 1000000);
                12=UselessItemData(bomb, 2, 1);
                13=if(ScriptItemActionType(t_OnStep, 11))
                13 ^{
                    01=if(StarShips(bomb_star))
                    01 ^{
                        01=FireWeapon(StarShips(bomb_star, 0), bomb, 0);
                    }
                    02=else ItemDestroy(bomb, 1);
                }
                14=else ItemDestroy(bomb, 1);
            }
        }
        OnActCodeTypes=t_OnStep,t_OnDropItem,t_OnDropItemFixed,t_OnItemPickUp,t_OnItemHit,t_OnItemDestroy,t_OnDeath
        OnActStepTypes=1,2,3,4,5,6,7,8,9,10,11
        Owner=PirateClan
        Size=7
        Text=При взрыве наносит всем материальным объектам значительные повреждения.
    }
    RNDmoditem_1 ^{
        Cost=Big
        Name=Декалератор
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) < t_Weapon1|| ItemType(item) > t_CustomWeapon) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=int dmgset = GetEquipmentStats(item, 6);
            05=if((dmgset & 1) != 1 || (dmgset & 8) == 8 || (dmgset & 512) == 512 || (dmgset & 1024) == 1024) exit;
            06=if(ScriptItemActionType(t_OnCheckingUsability))
            07 ^{
                01=ScriptItemActParam(1);
            }
            08=else
            09 ^{
                01=str text_q = 'Вы уверены, что хотите установить ModuleName в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_Decelerator'), 1);
                    02=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=None
        Size=5
        Text=Набор для модификации <color=255,240,100>энергетического оружия</color>.<br>Дополняет излучатель орудия особой камерой с заряженными частицами, которые, получая энергетический импульс, в общем потоке устремляются к цели, а достигнув её, подавляют работу ускорительного контура двигателя, тем самым заметно снижая скорость облучённого корабля. К сожалению, посторонняя камера, установленная на пути выстрела, частично задерживает энергетический выброс и перегревает орудие, что в конечном итоге приводит к снижению его долговечности.
        Text=<clr><clrEnd>
        Text=Дополнительный эффект: <color=255,240,100>замедление цели</color>
        Text=Надёжность оружия: <color=255,240,100>-15%</color>
        Text=<clr><clrEnd>
        Text=<color=255,240,100>Невозможно установить в оружие, уже имеющее<br>замедляющий эффект.</color>
    }
    RNDmoditem_10 ^{
        Cost=Average
        Name=Процессоры "Экстрим"
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_RepairRobot) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            06=if(~EqSpecial(item))
            07 ^{
                01=str bon_num = BonusNumInCfg(EqSpecial(item));
                02=if(CT('MicroModuls.' + bon_num + '.BlockImp') == 1) exit;
                03=if(CT('MicroModuls.' + bon_num + '.BioEquip') == 1)
                04 ^{
                    01=if(ScriptItemActionType(t_OnCheckingUsability)) exit;
                    02=MessageBox('Вы не вполне уверены, имеется ли у этого дроида процессор, но так или иначе, пытаться запихнуть его в несчастное животное было бы крайне негуманно.', 34);
                    03=exit;
                }
                05=if(!findsubstr(bon_num, 'RevAcryn_BattleDroid'))
                06 ^{
                    01=if(ScriptItemActionType(t_OnCheckingUsability)) exit;
                    02=MessageBox('Боевой дроид не способен выполнять ремонт, а его поведение под вражеским обстрелом и без того экстремальнее некуда.', 34);
                    03=exit;
                }
            }
            08=if(ScriptItemActionType(t_OnCheckingUsability))
            09 ^{
                01=ScriptItemActParam(1);
            }
            10=else
            11 ^{
                01=str text_q = 'Вы уверены, что хотите установить ModuleName в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_ProcessorsExtreme'), 1);
                    02=SetEquipmentStats(item, GetEquipmentStats(item, 0) + 8, 0);
                    03=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    04=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    05=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=3
        Text=Набор для модификации <color=255,240,100>дроида</color>.<br>Процессоры "Экстрим" меняют логику поведения дроида, в результате чего тот становится менее осторожным, но в тоже время быстрее производит необходимый ремонт.
        Text=<clr><clrEnd>
        Text=Эффективность дроида: <color=255,240,100>+8</color> ед.
        Text=Надёжность дроида: <color=255,240,100>-20%</color>
    }
    RNDmoditem_11 ^{
        Cost=Average
        Name=Замена систем безопасности
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_FuelTanks) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            06=if(~EqSpecial(item))
            07 ^{
                01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            08=if(ScriptItemActionType(t_OnCheckingUsability))
            09 ^{
                01=ScriptItemActParam(1);
            }
            10=else
            11 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>замену систем безопасности</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_SecurityReplacement'), 1);
                    02=SetEquipmentStats(item, GetEquipmentStats(item, 0) + 20, 0);
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=5
        Text=Набор для модификации <color=255,240,100>топливного бака</color>.<br>Перекодировка и удаление некоторых систем безопасности позволяет ощутимо повысить максимальную вместимость бака, в ущерб его надёжности.
        Text=<clr><clrEnd>
        Text=Объем бака: <color=255,240,100>+20</color> ед.
        Text=Надёжность бака: <color=255,240,100>-60%</color>
    }
    RNDmoditem_12 ^{
        Cost=Big
        Name=Хакнутый инжектор
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_Engine) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            06=if(~EqSpecial(item))
            07 ^{
                01=if(!findsubstr(BonusNumInCfg(EqSpecial(item)), 'RevAcryn_NOKM'))
                02 ^{
                    01=if(ScriptItemActionType(t_OnCheckingUsability)) exit;
                    02=MessageBox('У данного устройства отсутствует инжектор, да и вообще оно не является двигателем в том смысле, какой требует наличие инжектора.', 34);
                    03=exit;
                }
                03=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            08=if(ScriptItemActionType(t_OnCheckingUsability))
            09 ^{
                01=ScriptItemActParam(1);
            }
            10=else
            11 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>хакнутый инжектор</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_HackedInjector'), 1);
                    02=SetEquipmentStats(item, GetEquipmentStats(item, 0) + 200, 0);
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=8
        Text=Набор для модификации <color=255,240,100>двигателя</color>.<br>Заменяет стандартный топливный инжектор на хакнутую версию, пропускающую в камеру сгорания ощутимо большее количество топливо, что ведёт к существенному приросту скорости двигателя. К несчастью, повышенное поступление топлива фактически переводит двигатель на постоянный форсированный режим, что отрицательным образом сказывается на долговечности агрегата.
        Text=<clr><clrEnd>
        Text=Скорость двигателя: <color=255,240,100>+200</color> ед.
        Text=Надёжность двигателя: <color=255,240,100>-40%</color>
    }
    RNDmoditem_13 ^{
        Cost=Average
        Name=Усиленные сервоприводы
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_CargoHook) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            06=if(~EqSpecial(item))
            07 ^{
                01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            08=if(ScriptItemActionType(t_OnCheckingUsability))
            09 ^{
                01=ScriptItemActParam(1);
            }
            10=else
            11 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>усиленные сервоприводы</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_ReinforcedServoDrives'), 1);
                    02=SetEquipmentStats(item, GetEquipmentStats(item, 0) + 40, 0);
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=16
        Text=Набор для модификации <color=255,240,100>захвата</color>.<br>Оборудует захват усиленными сервоприводами, что позволяет ему захватывать предметы большего размера и веса. К сожалению, весь остальной механизм устройства на повышенную нагрузку не рассчитан, а потому выходит из строя намного раньше положенного срока.
        Text=<clr><clrEnd>
        Text=Мощность захвата: <color=255,240,100>+40</color> ед.
        Text=Надёжность захвата: <color=255,240,100>-25%</color>
    }
    RNDmoditem_14 ^{
        Cost=Big
        Name=Набор деталей из фрагилиума
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) < t_FuelTanks || ItemType(item) > t_CustomWeapon) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                    03=if(BonusNumInCfg(sp_num) == 'ShuMercsHQ_Exdurality') exit;
                }
            }
            06=if(ScriptItemActionType(t_OnCheckingUsability))
            07 ^{
                01=ScriptItemActParam(1);
            }
            08=else
            09 ^{
                01=str text_q = 'Вы действительно хотите укрепить ItemName <color=0,50,200>фрагилиумными деталями</color>?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FragiliumParts'), 1);
                    02=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=5
        Text=Набор для модификации<br><color=255,240,100>любого</color> оборудования.<br>Заменяет самые ходовые детали в оборудовании на более износостойкие аналоги из фрагилиума.
        Text=<clr><clrEnd>
        Text=Надёжность оборудования: <color=255,240,100>+40%</color>
    }
    RNDmoditem_3 ^{
        Cost=Big
        Name=Асидий
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) < t_Weapon1|| ItemType(item) > t_CustomWeapon) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=int dmgset = GetEquipmentStats(item, 6);
            05=if((dmgset & 2) != 2 || (dmgset & 128) == 128) exit;
            06=if(CustomWeaponType(item) == 'PhysGun') exit;
            07=if(ScriptItemActionType(t_OnCheckingUsability))
            07 ^{
                01=ScriptItemActParam(1);
            }
            08=else
            08 ^{
                01=str text_q = 'Вы уверены, что хотите установить ModuleName в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                03 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_Acidius'), 1);
                    02=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=None
        Size=5
        Text=Набор для модификации <color=255,240,100>осколочного оружия</color>.<br>Оснащает механизм заряжания специальным устройством, начиняющим все снаряды особым коррозийным составом, который, распыляясь в момент детонации, ослабляет броню вражеского судна. Усложнение базовой конструкции механизма заряжания, однако, отрицательным образом сказывается на<br>надёжности орудия.
        Text=<clr><clrEnd>
        Text=Дополнительный эффект: <color=255,240,100>ослабление брони</color>
        Text=Надёжность оружия: <color=255,240,100>-15%</color>
        Text=<clr><clrEnd>
        Text=<color=255,240,100>Невозможно установить в оружие, уже имеющее<br>ослабляющий броню эффект.</color>
    }
    RNDmoditem_4 ^{
        Cost=Average
        Name=Тиливые конденсаторы
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) < t_Weapon1|| ItemType(item) > t_CustomWeapon) exit;
            03=if((GetEquipmentStats(item, 6) & 1) != 1) exit;
            04=if(EqCustomFaction(item) == 'Klissan') exit;
            05=if(ItemImprovement(item))
            06 ^{
                01=int mm = EqModule(item);
                02=if(~mm)
                03 ^{
                    01=ModuleToEquipment(-1, item);
                    02=if(ItemImprovement(item))
                    03 ^{
                        01=ModuleToEquipment(mm, item);
                        02=exit;
                    }
                    04=ModuleToEquipment(mm, item);
                }
                04=else exit;
            }
            07=if(ItemExtraSpecials(item))
            08 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            09=if(~EqSpecial(item))
            10 ^{
                01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            11=if(ScriptItemActionType(t_OnCheckingUsability))
            12 ^{
                01=ScriptItemActParam(1);
            }
            13=else
            14 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>тиливые конденсаторы</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_TillCapacitors'), 1);
                    02=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=7
        Text=Набор для модификации <color=255,240,100>энергетического оружия</color>.
        Text=Тиливые конденсаторы обладают повышенной ёмкостью, что позволяет накапливать большую мощность выстрела, однако эта же избыточная мощность быстрее изнашивает проводящие энергоузлы орудия, которые попросту не предназначались для распределения подобных нагрузок.
        Text=<clr><clrEnd>
        Text=Сила оружия: <color=255,240,100>+15</color> ед.
        Text=Надёжность оружия: <color=255,240,100>-20%</color>
    }
    RNDmoditem_5 ^{
        Cost=Average
        Name=Подкрученные ограничители
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) < t_Weapon1|| ItemType(item) > t_CustomWeapon) exit;
            03=if((GetEquipmentStats(item, 6) & 2) != 2) exit;
            04=if(EqCustomFaction(item) == 'Klissan') exit;
            05=if(ItemImprovement(item))
            06 ^{
                01=int mm = EqModule(item);
                02=if(~mm)
                03 ^{
                    01=ModuleToEquipment(-1, item);
                    02=if(ItemImprovement(item))
                    03 ^{
                        01=ModuleToEquipment(mm, item);
                        02=exit;
                    }
                    04=ModuleToEquipment(mm, item);
                }
                04=else exit;
            }
            07=if(ItemExtraSpecials(item))
            08 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            09=if(~EqSpecial(item))
            10 ^{
                01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            11=if(ScriptItemActionType(t_OnCheckingUsability))
            12 ^{
                01=ScriptItemActParam(1);
            }
            13=else
            14 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>подкрученные ограничители</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_WeakenedLimiters'), 1);
                    02=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    03=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    04=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=7
        Text=Набор для модификации <color=255,240,100>осколочного оружия</color>.
        Text=Блок управления стрельбой, с которого были аккуратно сняты некоторые заводские ограничения. Орудия, оснащённые таким блоком, способны вести огонь на большие дистанции, однако механизмы компенсации отдачи не выдерживают дополнительной нагрузки из-за чего быстрее выходят из строя.
        Text=<clr><clrEnd>
        Text=Дальность стрельбы: <color=255,240,100>+40</color> ед.
        Text=Надёжность оружия: <color=255,240,100>-20%</color>
    }
    RNDmoditem_6 ^{
        Cost=Average
        Name=Дополнительная боеукладка
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) < t_Weapon1|| ItemType(item) > t_CustomWeapon) exit;
            03=if((GetEquipmentStats(item, 6) & 4) != 4) exit;
            04=if(EqCustomFaction(item) == 'Klissan') exit;
            05=if(ItemExtraSpecials(item))
            06 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            07=if(~EqSpecial(item))
            08 ^{
                02=if(CustomWeaponType(item) == 'PhysGun') exit;
            }
            09=if(ScriptItemActionType(t_OnCheckingUsability))
            10 ^{
                01=ScriptItemActParam(1);
            }
            11=else
            12 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>дополнительную боеукладку</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_AdditionalStowage'), 1);
                    02=WeaponMaxAmmunition(item, WeaponMaxAmmunition(item) + 15);
                    03=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    04=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    05=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=12
        Text=Набор для модификации <color=255,240,100>ракетного оружия</color>.
        Text=Дополнительная боеукладка под реактивные снаряды, подключаемая напрямую к механизму заряжания. Увеличивает максимальное количество вмещаемых зарядов.
        Text=<clr><clrEnd>
        Text=Максимальное количество зарядов: <color=255,240,100>+15</color> шт.
    }
    RNDmoditem_7 ^{
        Cost=Big
        Name=Уплотнитель поля
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_DefGenerator) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            06=if(~EqSpecial(item))
            07 ^{
                01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            08=if(ScriptItemActionType(t_OnCheckingUsability))
            09 ^{
                01=ScriptItemActParam(1);
            }
            10=else
            11 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>уплотнитель поля</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_FieldDensityAmplifier'), 1);
                    02=SetEquipmentStats(item, GetEquipmentStats(item, 0) + 6, 0);
                    03=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    04=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    05=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=7
        Text=Набор для модификации <color=255,240,100>генератора защитного поля</color>.
        Text=Уплотнитель защитного поля усиливает эффект, выдаваемый генератором в штатном режиме работы, однако дополнительная нагрузка на энергосистему устройства снижает его долговечность.
        Text=<clr><clrEnd>
        Text=Генератор поля: <color=255,240,100>+6</color> ед.
        Text=Надёжность генератора: <color=255,240,100>-20%</color>
    }
    RNDmoditem_8 ^{
        Cost=Average
        Name=Меонные чипы
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_Radar) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            06=if(~EqSpecial(item))
            07 ^{
                01=if(!findsubstr(BonusNumInCfg(EqSpecial(item)), 'RevAcryn_Ubivator'))
                02 ^{
                    01=if(ScriptItemActionType(t_OnCheckingUsability)) exit;
                    02=MessageBox('Это устройство не является радаром, да и вставлять в него что-либо попросту опасно.', 34);
                    03=exit;
                }
                03=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            08=if(ScriptItemActionType(t_OnCheckingUsability))
            09 ^{
                01=ScriptItemActParam(1);
            }
            10=else
            11 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>меонные чипы</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_MeonChips'), 1);
                    02=SetEquipmentStats(item, GetEquipmentStats(item, 0) + 900, 0);
                    03=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    04=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    05=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=7
        Text=Набор для модификации <color=255,240,100>радара</color>.<br>Меонные чипы не славятся своей долговечностью, зато позволяют значительно повысить общую эффективность радара.
        Text=<clr><clrEnd>
        Text=Дальность радара: <color=255,240,100>+900</color> млн. км.
        Text=Надёжность радара: <color=255,240,100>-20%</color>
    }
    RNDmoditem_9 ^{
        Cost=Average
        Name=Контурный усилитель
        OnActCode ^{
            01=dword item = ScriptItemActObject1();
            02=if(ItemType(item) != t_Scaner) exit;
            03=if(EqCustomFaction(item) == 'Klissan') exit;
            04=if(ItemExtraSpecials(item))
            05 ^{
                01=int sp_num = 0;
                02=for(int i = 0; i < ItemExtraSpecials(item); i = i + 1)
                03 ^{
                    01=sp_num = ItemExtraSpecials(item, i);
                    02=if(!findsubstr(CT('MicroModuls.' + BonusNumInCfg(sp_num) + '.Name'), 'dt_Modify')) exit;
                }
            }
            06=if(~EqSpecial(item))
            07 ^{
                01=if(CT('MicroModuls.' + BonusNumInCfg(EqSpecial(item)) + '.BlockImp') == 1) exit;
            }
            08=if(ScriptItemActionType(t_OnCheckingUsability))
            09 ^{
                01=ScriptItemActParam(1);
            }
            10=else
            11 ^{
                01=str text_q = 'Вы уверены, что хотите установить <color=0,50,200>контурный усилитель</color> в ItemName?';
                02=text_q = Format(text_q, 'ModuleName', Name(CurItem()), 'ItemName', Name(item));
                03=if(MessageBoxYesNo(text_q))
                04 ^{
                    01=ItemExtraSpecialsAddByType(item, FindBonusByNameInCfg('ExpArts_CircuitAmplifier'), 1);
                    02=SetEquipmentStats(item, GetEquipmentStats(item, 0) + 7, 0);
                    03=ItemSize(item, ItemSize(item) + ItemSize(CurItem()));
                    04=ItemCost(item, ItemCost(item) + ItemCost(CurItem()));
                    05=ScriptItemActParam(1);
                }
            }
        }
        OnActCodeTypes=t_OnCheckingUsability,t_OnAnotherItem
        Owner=PirateClan
        Size=7
        Text=Набор для модификации <color=255,240,100>сканера</color>.<br>Усиливает напряжение, подаваемое на сканирующий контур, тем самым увеличивая мощность сканирования. К сожалению, скорость выгорания сканирующего контура также возрастает.
        Text=<clr><clrEnd>
        Text=Мощность сканера: <color=255,240,100>+7</color> ед.
        Text=Надёжность сканера: <color=255,240,100>-20%</color>
    }
    Stun_bomb ^{
        Cost=Big
        Name=Оглушающая бомба
        OnActCode ^{
            01=dword bomb = CurItem();
            02=int primer_type = UselessItemData(bomb, 2);
            03=if(primer_type == 1) exit;
            04=int boom_flag = 0;
            05=if(ScriptItemActionType(t_OnStep))
            05 ^{
                01=if(ScriptItemActParam() == 5)
                01 ^{
                    01=if(primer_type == -5 || primer_type <= -7)
                    01 ^{
                        01=if(UselessItemData(bomb, 1) > 0)
                        01 ^{
                            01=if(UselessItemData(bomb, 1) == 1) boom_flag = 1;
                            02=else UselessItemData(bomb, 1, UselessItemData(bomb, 1) - 1);
                        }
                        02=if(primer_type == -5)
                        02 ^{
                            01=primer_type = -6;
                            02=UselessItemData(bomb, 2, -6);
                        }
                        03=else if(primer_type == -7)
                        03 ^{
                            01=primer_type = -9;
                            02=UselessItemData(bomb, 2, -9);
                        }
                    }
                }
                02=if(primer_type == -6 || primer_type == -9)
                02 ^{
                    01=if(!boom_flag)
                    01 ^{
                        01=bomb_star = ScriptItemActObject1();
                        02=for(int i = StarShips(bomb_star) - 1; i >= 0; i = i - 1)
                        02 ^{
                            01=ship = StarShips(bomb_star, i);
                            02=if(Dist(bomb, ship) <= 70)
                            02 ^{
                                01=boom_flag = 2;
                                02=break;
                            }
                        }
                        03=if(!boom_flag)
                        03 ^{
                            01=for(i = StarRuins(bomb_star) - 1; i >= 0; i = i - 1)
                            01 ^{
                                01=ship = StarRuins(bomb_star, i);
                                02=if(Dist(bomb, ship) <= 70)
                                02 ^{
                                    01=boom_flag = 2;
                                    02=break;
                                }
                            }
                        }
                    }
                }
            }
            06=else if(ScriptItemActionType(t_OnDropItem) || ScriptItemActionType(t_OnDropItemFixed))
            06 ^{
                01=if(ScriptItemActObject1() == bomb)
                01 ^{
                    01=if(!ScriptItemActObject2()) UselessItemData(bomb, 3, Id(ShipStar(ScriptItemActShip())) - 1);
                    02=else UselessItemData(bomb, 3, Id(ScriptItemActObject2()) - 1);
                    03=if(primer_type == 0)
                    03 ^{
                        01=primer_type = -4;
                        02=UselessItemData(bomb, 2, -4);
                    }
                    04=else if(primer_type == -1)
                    04 ^{
                        01=primer_type = -5;
                        02=UselessItemData(bomb, 2, -5);
                    }
                    05=else if(primer_type == -2)
                    05 ^{
                        01=UselessItemText(bomb, CT('UselessItems.' + EquipmentImageName(bomb) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.WillBeActivatedIn'));
                        02=primer_type = -8;
                        03=UselessItemData(bomb, 2, -8);
                    }
                    06=else if(primer_type == -3)
                    06 ^{
                        01=UselessItemText(bomb, CT('UselessItems.' + EquipmentImageName(bomb) + '.Text') + substr(CT('Cheat.Ok'), 0, 2) + '<br><clr><clrEnd><br>' + CT('Script.Mod_ExpArts.WillBeActivatedIn'));
                        02=primer_type = -7;
                        03=UselessItemData(bomb, 2, -7);
                    }
                }
            }
            07=else if(ScriptItemActionType(t_OnItemPickUp))
            07 ^{
                01=if(ScriptItemActObject1() == bomb)
                01 ^{
                    01=if(primer_type == -4)
                    01 ^{
                        01=primer_type = 0;
                        02=UselessItemData(bomb, 2, 0);
                    }
                }
            }
            08=else if(ScriptItemActionType(t_OnItemHit))
            08 ^{
                01=if(ObjectType(ScriptItemActObject1()) == 7)
                02 ^{
                    01=if(FilmFlags(0)) FilmSound('Sound.RndHole03', bomb);
                }
            }
            09=if(CurrentForm() == 'Ship') exit;
            10=if(ScriptItemActionType(t_OnItemDestroy) || ScriptItemActionType(t_OnDeath)) boom_flag = (primer_type <= -4);
            11=else if(ScriptItemActionType(t_OnItemPickUp)) boom_flag = (ScriptItemActObject1() == bomb && primer_type <= -5);
            12=if(boom_flag)
            12 ^{
                01=dword bomb_star = GalaxyStar(UselessItemData(bomb, 3));
                02=int player_can_see = FilmFlags(0);
                03=dword boom_ship = ScriptItemActShip();
                04=if(boom_ship)
                04 ^{
                    01=bomb_star = ShipStar(boom_ship);
                    02=if(!ScriptItemActObject2()) OrderNone(boom_ship);
                    03=if(player_can_see)
                    03 ^{
                        01=ShowStaticEffect('Stun_bomb_BAM', CoordX(boom_ship), CoordY(boom_ship));
                        02=FilmSound('Sound.RndHole03', boom_ship);
                    }
                }
                05=else
                05 ^{
                    01=if(player_can_see)
                    01 ^{
                        01=ShowStaticEffect('Stun_bomb_BAM', CoordX(bomb), CoordY(bomb));
                        02=FilmSound('Sound.RndHole03', bomb);
                    }
                }
                06=for(i = StarShips(bomb_star) - 1; i >= 0; i = i - 1)
                06 ^{
                    01=dword ship = StarShips(bomb_star, i);
                    02=if(boom_ship)
                    02 ^{
                        01=int Tdist = Dist(boom_ship, ship);
                        02=if(Tdist > 250) continue;
                    }
                    03=else
                    03 ^{
                        01=Tdist = Dist(bomb, ship);
                        02=if(Tdist > 250) continue;
                    }
                    04=if(!ShipInNormalSpace(ship)) continue;
                    05=if(ObjectType(ship) == 4) continue;
                    06=if(ShipOwner(ship) == None)
                    06 ^{
                        01=if(ShipCustomFaction(ship) == 'Unknown') continue;
                    }
                    07=if(ShipOwner(ship) == Kling)
                    07 ^{
                        01=if(!ShipSubType(ship)) continue;
                    }
                    08=str tempType = ShipType(ship);
                    09=if(tempType == 'DomRuins') continue;
                    10=if(tempType == 'Neurolink') continue;
                    11=if(tempType == 'Machpella') continue;
                    12=if(tempType == 'KillerAsteroid') continue;
                    13=int DayLong = round(15.0 - (10.0 * (Tdist * Tdist) / 62500));
                    14=OrderLock(ship, 1);
                    15=if(!ShipIsTakeoff(ship))
                    15 ^{
                        01=float angle = pi * (ShipAngle(ship) + 90.0) / RndObject(179, 181, ship);
                        02=OrderMove(ship, cos(angle) * 10.0 + CoordX(ship), sin(angle) * 10.0 + CoordY(ship));
                    }
                    16=if(ship == Player()) FilmFlags(3, 1);
                    17=int targ_infos = ShipFindCustomShipInfoByType(ship, 'ExpArts_ShipStunned');
                    18=if(targ_infos == -1)
                    18 ^{
                        01=if(ship == Player()) ShipAddCustomShipInfo(ship, 'ExpArts_ShipStunned', 'Вы подверглись воздействию неизвестного излучения и временно утратили контроль над собственными действиями.', DayLong);
                        02=else ShipAddCustomShipInfo(ship, 'ExpArts_ShipStunned', '', DayLong + 1);
                        03=ShipSpecialBonuses(ship, bonHook, ShipSpecialBonuses(ship, bonHook) - 50000);
                        04=if(!NoTalkToShip(ship))
                        04 ^{
                            01=NoTalkToShip(ship, 1);
                            02=ShipCustomShipInfoData(ship, ShipFindCustomShipInfoByType(ship, 'ExpArts_ShipStunned'), 3, 1);
                        }
                    }
                    19=else ShipCustomShipInfoData(ship, targ_infos, 1, ShipCustomShipInfoData(ship, targ_infos, 1) + DayLong);
                    20=if(ship == Player())
                    20 ^{
                        01=dword player_star = ShipStar(Player());
                        02=for(int j = StarShips(player_star) - 1; j >= 0; j = j - 1)
                        02 ^{
                            01=dword some_ship = StarShips(player_star, j);
                            02=if(ShipFindCustomShipInfoByType(some_ship, 'ExpArts_ShipInStarWithStunnedPlayer') == -1)
                            02 ^{
                                01=ShipAddCustomShipInfo(some_ship, 'ExpArts_ShipInStarWithStunnedPlayer', 'NoShow');
                                02=if(!NoTalkToShip(some_ship))
                                02 ^{
                                    01=NoTalkToShip(some_ship, 1);
                                    02=ShipCustomShipInfoData(some_ship, ShipFindCustomShipInfoByType(some_ship, 'ExpArts_ShipInStarWithStunnedPlayer'), 2, 1);
                                }
                                03=if(!NoScanToShip(some_ship))
                                03 ^{
                                    01=NoScanToShip(some_ship, 1);
                                    02=ShipCustomShipInfoData(some_ship, ShipFindCustomShipInfoByType(some_ship, 'ExpArts_ShipInStarWithStunnedPlayer'), 3, 1);
                                }
                            }
                        }
                        03=if(~HullSpecial(Player()))
                        03 ^{
                            01=if(BonusNumInCfg(HullSpecial(Player())) == 490) CapitalShipStats(ShipItems(Player(), 0), 1, 0);
                        }
                        04=if(GetMainData('Data.Script.Mod_ExpPanel') == '1,Script.Mod_ExpPanel')
                        04 ^{
                            01=ShipCustomShipInfoData(Player(), ShipFindCustomShipInfoByType(Player(), 'ExpArts_ShipStunned'), 3, 0);
                            02=j = 9;
                            03=while(j)
                            03 ^{
                                01=if(InterfaceState('StarMap', 'set_button_' + j + '_c') == 1)
                                01 ^{
                                    01=InterfaceState('StarMap', 'set_button_' + j + '_c', 0);
                                    02=ShipCustomShipInfoData(Player(), ShipFindCustomShipInfoByType(Player(), 'ExpArts_ShipStunned'), 3, ShipCustomShipInfoData(Player(), ShipFindCustomShipInfoByType(Player(), 'ExpArts_ShipStunned'), 3) + 1);
                                }
                                02=j = j - 1;
                            }
                            04=if(InterfaceState('StarMap', 'Klesh_panel') == 1)
                            04 ^{
                                01=InterfaceState('StarMap', 'Klesh_panel', 0);
                                02=ShipCustomShipInfoData(Player(), ShipFindCustomShipInfoByType(Player(), 'ExpArts_ShipStunned'), 3, ShipCustomShipInfoData(Player(), ShipFindCustomShipInfoByType(Player(),'ExpArts_ShipStunned'), 3) + 10);
                            }
                            05=if(InterfaceState('StarMap', 'ppb_panel') == 1)
                            05 ^{
                                01=InterfaceState('StarMap', 'ppb_panel', 0);
                                02=ShipCustomShipInfoData(Player(), ShipFindCustomShipInfoByType(Player(), 'ExpArts_ShipStunned'), 3, ShipCustomShipInfoData(Player(), ShipFindCustomShipInfoByType(Player(), 'ExpArts_ShipStunned'), 3) + 10);
                            }
                        }
                    }
                }
                07=if(primer_type <= -5 && primer_type != -8)
                07 ^{
                    01=SetName(bomb, CT('Script.Mod_ExpArts.DepletedStunMine'));
                    02=UselessItemText(bomb, CT('Script.Mod_ExpArts.MineIsDepleted'));
                }
                08=else
                08 ^{
                    01=SetName(bomb, CT('Script.Mod_ExpArts.DepletedStunBomb'));
                    02=UselessItemText(bomb, CT('Script.Mod_ExpArts.BombIsDepleted'));
                }
                09=ItemCost(bomb, RndObject(15, 21, bomb_star) * ItemSize(bomb));
                10=UselessItemData(bomb, 2, 1);
            }
        }
        OnActCodeTypes=t_OnStep,t_OnDropItem,t_OnDropItemFixed,t_OnItemPickUp,t_OnItemHit,t_OnItemDestroy,t_OnDeath
        OnActStepTypes=1,2,3,4,5,6,7,8,9,10,11
        Owner=PirateClan
        Size=7
        Text=Сложное электронное устройство, уникальное наследие древности, при активации генерирующее поток излучения неизвестной доселе природы. Излучение подавляет любую высшую нервную деятельность, равно как и логику любых типов компьютеров<br>на срок от <color=255,240,100>5</color> до <color=255,240,100>15</color> суток.
    }
}
ShipInfo ^{
    AddInfo ^{
        CustomInfos ^{
            DeadByHitInfo ^{
                Description=NoShow
                Icon=0
                Name=Корабли с этой маркерной инфошкой будут получать фатальный урон в случае попадания по ним корабля/оружия/предмета указанного в инфошке типа (можно вешать несколько инфошек сразу, если необходимо, чтобы цель погибала от нескольких разных типов урона)
                OnActCode ^{
                    01=dword cur_info = CurInfo();
                    02=dword cur_ship = ScriptItemActShip();
                    03=dword dealer = ScriptItemActObject1();
                    04=int obj_type = ObjectType(dealer);
                    05=if(obj_type != ShipCustomShipInfoData(0, cur_info, 1)) exit;
                    06=if(obj_type)
                    06 ^{
                        01=if(ShipCustomShipInfoData(0, cur_info, 2))
                        01 ^{
                            01=int num_type = 0;
                            02=if(obj_type == 4 || obj_type == 5) num_type = ShipTypeN(dealer);
                            03=else if(obj_type == 6) num_type = ItemType(dealer);
                            04=if(num_type != ShipCustomShipInfoData(0, cur_info, 2)) exit;
                        }
                        02=if(ShipCustomShipInfoData(0, cur_info, 3))
                        02 ^{
                            01=int obj_Id = 0;
                            02=if((obj_type >= 4 && obj_type <= 7) || obj_type == 1) obj_Id = Id(dealer);
                            03=if(obj_Id != ShipCustomShipInfoData(0, cur_info, 3)) exit;
                        }
                        03=str text_filt_1 = ShipCustomShipInfoTextData(0, cur_info, 1);
                        04=if(text_filt_1 != '')
                        04 ^{
                            01=str match_str = '';
                            02=if(obj_type == 6) match_str = EquipmentImageName(dealer);
                            03=if(match_str != text_filt_1) exit;
                        }
                    }
                    07=ScriptItemActParam(ScriptItemActParam() + HullHP(cur_ship));
                }
                OnActCodeTypes=t_OnTakingDamage,t_OnTakingDamageEn,t_OnTakingDamageSp,t_OnTakingDamageMi
            }
            ExpArts_ShipInStarWithStunnedPlayer ^{
                Description=Эта инфошка снимает с корабля запрет на разговор и скан в конце хода
                Icon=1
                Name=
                OnActCode ^{
                    01=dword infos = CurInfo();
                    02=dword ship = ScriptItemActShip();
                    03=if(ShipCustomShipInfoData(0, infos, 2)) NoTalkToShip(ship, 0);
                    04=if(ShipCustomShipInfoData(0, infos, 3)) NoScanToShip(ship, 0);
                    05=ShipDeleteCustomShipInfo(0, infos);
                }
                OnActCodeTypes=t_OnStep
                OnActStepTypes=10
            }
            ExpArts_ShipStunned ^{
                Description=Экипаж корабля подвергся воздействию неизвестного излучения и временно утратил контроль над собственными действиями.
                Icon=1
                Name=Оглушение
                OnActCode ^{
                    01=dword infos = CurInfo();
                    02=dword ship = ScriptItemActShip();
                    03=if(ScriptItemActionType(t_OnStep))
                    03 ^{
                        01=if(!ScriptItemActParam())
                        01 ^{
                            01=OrderNone(ship);
                            02=for(int i = 1; i <= ShipCntWeapon(ship); i = i + 1) WeaponTarget(ShipWeapon(ship, i), 0);
                            03=float angle = pi * (ShipAngle(ship) + 90.0) / RndObject(179, 181, ship);
                            04=OrderMove(ship, cos(angle) * 10.0 + CoordX(ship), sin(angle) * 10.0 + CoordY(ship));
                        }
                        02=else
                        02 ^{
                            01=int days_left = ShipCustomShipInfoData(0, infos, 1);
                            02=if(days_left <= 1)
                            02 ^{
                                01=OrderLock(ship, 0);
                                02=ShipSpecialBonuses(ship, bonHook, ShipSpecialBonuses(ship, bonHook) + 50000);
                                03=if(IsPlayer(ship))
                                03 ^{
                                    01=if(~HullSpecial(Player()))
                                    01 ^{
                                        01=if(BonusNumInCfg(HullSpecial(Player())) == '490')
                                        01 ^{
                                            01=CapitalShipStats(ShipItems(Player(), 0), 1, 1000);
                                        }
                                    }
                                    02=if(ShipCustomShipInfoData(0, infos, 3))
                                    02 ^{
                                        01=i = ShipCustomShipInfoData(0, infos, 3) % 10;
                                        02=while(i)
                                        02 ^{
                                            01=InterfaceState('StarMap', 'set_button_' + i + '_c', 1);
                                            02=i = i - 1;
                                        }
                                        03=if(int(ShipCustomShipInfoData(0, infos, 3) / 10) > 0)
                                        03 ^{
                                            01=InterfaceState('StarMap', 'Klesh_panel', 1);
                                        }
                                        04=if(int(ShipCustomShipInfoData(0, infos, 3) / 10) > 1)
                                        04 ^{
                                            01=InterfaceState('StarMap', 'ppb_panel', 1);
                                        }
                                    }
                                }
                                04=if(ShipCustomShipInfoData(0, infos, 3) == 1) NoTalkToShip(ship, 0);
                                05=ShipDeleteCustomShipInfo(0, infos);
                            }
                            03=else
                            03 ^{
                                01=ShipCustomShipInfoData(0, infos, 1, days_left - 1);
                                02=if(IsPlayer(ship))
                                02 ^{
                                    01=FilmFlags(3, 1);
                                    02=dword cur_star = ShipStar(Player());
                                    03=for(i = 0; i < StarShips(cur_star); i = i + 1)
                                    03 ^{
                                        01=dword cur_ship = StarShips(cur_star, i);
                                        02=if(ShipFindCustomShipInfoByType(cur_ship, 'ExpArts_ShipInStarWithStunnedPlayer') == -1)
                                        02 ^{
                                            01=ShipAddCustomShipInfo(cur_ship, 'ExpArts_ShipInStarWithStunnedPlayer', 'NoShow');
                                            02=if(!NoTalkToShip(cur_ship))
                                            02 ^{
                                                01=NoTalkToShip(cur_ship, 1);
                                                02=ShipCustomShipInfoData(cur_ship, 'ExpArts_ShipInStarWithStunnedPlayer', 2, 1);
                                            }
                                            03=if(!NoScanToShip(cur_ship))
                                            03 ^{
                                                01=NoScanToShip(cur_ship, 1);
                                                02=ShipCustomShipInfoData(cur_ship, 'ExpArts_ShipInStarWithStunnedPlayer', 3, 1);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    04=else
                    04 ^{
                        01=str cur_form = CurrentForm();
                        02=if(cur_form == 'Ship' || cur_form == 'Info' || cur_form == 'Rating' || cur_form == 'Galaxy' || PlayerBridge())
                        02 ^{
                            01=MessageBox('Вы подверглись воздействию неизвестного излучения и временно утратили контроль над собственными действиями.', 34);
                            02=FormChange('StarMap');
                        }
                        03=else if(cur_form == 'StarMap')
                        03 ^{
                            01=if(ShipCustomShipInfoData(Player(), infos, 3))
                            01 ^{
                                01=i = ShipCustomShipInfoData(0, infos, 3) % 10;
                                02=while(i)
                                02 ^{
                                    01=InterfaceState('StarMap', 'set_button_' + i + '_c', 0);
                                    02=i = i - 1;
                                }
                            }
                        }
                    }
                }
                OnActCodeTypes=t_OnStep,t_OnEnteringForm
                OnActStepTypes=0,11
                StatusEffect=Оглушение
            }
        }
    }
}
MicroModuls ^{
    436 ^{
        BioEquip=1
    }
    437 ^{
        BioEquip=1
    }
    438 ^{
        BioEquip=1
    }
    ErimeterBounusNone ^{
        CustomTag=ErimeterBounusNone
        LockedAcryn=3
        Priority=0
        Special=1
        bonHook=60
        bonHookMaxSpeed=2
        bonHookMinSpeed=2
        bonHookRadius=50
    }
    ErimeterNormal ^{
        CustomTag=ErimeterNorm
        LockedAcryn=3
        Priority=0
        Special=1
        bonHook=30
        bonHookMaxSpeed=1
        bonHookMinSpeed=1
        bonHookRadius=25
    }
    ExpArts_Acidius ^{
        CustomTag=dt_Acid
        Equipments=WSplinter
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Асидий<clrEnd>
        ExText=<color=248,252,248>Разрыв каждого снаряда распыляет мелкодисперсное облако особого коррозийного состава, заметно ослабляющего броню в зоне поражения. Усложнение конструкции механизма заряжания, однако, негативным образом отразилось на надёжности орудия.</color>
        ExText=<clr><clrEnd>
        ExText=Дополнительный эффект: <clr>ослабление брони<clrEnd>
        ExText=Надёжность оружия: <clr>-15%<clrEnd>
        Fragility=117
        LockedAcryn=3
        NonSearchable=1
        Owner=None
        Priority=0
        Special=1
        WeaponMods=Acid
    }
    ExpArts_AdditionalStowage ^{
        Equipments=WMissile
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Дополнительная боеукладка<clrEnd>
        ExText=<color=248,252,248>Дополнительная боеукладка под реактивные<br>снаряды, подключённая напрямую<br>к механизму заряжания.</color>
        ExText=<clr><clrEnd>
        ExText=Максимальное количество зарядов: <clr>+15<clrEnd> шт.
        LockedAcryn=3
        Name=dt_Modify_AdditionalStowage
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_CircuitAmplifier ^{
        Equipments=Scaner
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Контурный усилитель<clrEnd>
        ExText=<color=248,252,248>Усиливает напряжение, подаваемое на сканирующий контур, что приводит к увеличению мощности сканирования. К несчастью, скорость выгорания контура также возрастает.</color>
        ExText=<clr><clrEnd>
        ExText=Мощность сканера: <clr>+7<clrEnd> ед.
        ExText=Надёжность сканера: <clr>-20%<clrEnd>
        Fragility=125
        LockedAcryn=3
        Name=dt_Modify_CircuitAmplifier
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_Decelerator ^{
        CustomTag=dt_Decelerate
        Equipments=WEnergy
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Декалератор<clrEnd>
        ExText=<color=248,252,248>Вместе с энергетическим импульсом при выстреле высвобождается поток заряженных частиц, подавляющих работу ускорительного контура двигателя, что приводит к существенному снижению скорости цели. К сожалению, в момент активации модифицированный излучатель генерирует избыточное<br>количество тепла, что не лучшим образом сказывается на долговечности орудия.</color>
        ExText=<clr><clrEnd>
        ExText=Дополнительный эффект: <clr>замедление цели<clrEnd>
        ExText=Надёжность оружия: <clr>-15%<clrEnd>
        Fragility=117
        LockedAcryn=3
        NonSearchable=1
        Owner=None
        Priority=0
        Special=1
        WeaponMods=Decelerate,DecelerateA,DecelerateAEx
    }
    ExpArts_FieldDensityAmplifier ^{
        Equipments=DefGenerator
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Уплотнитель поля<clrEnd>
        ExText=<color=248,252,248>Уплотнитель защитного поля усиливает эффект, выдаваемый генератором в штатном режиме работы, однако дополнительная нагрузка на энергосистему устройства снижает его долговечность.</color>
        ExText=<clr><clrEnd>
        ExText=Генератор поля: <clr>+6<clrEnd> ед.
        ExText=Надёжность генератора: <clr>-20%<clrEnd>
        Fragility=125
        LockedAcryn=3
        Name=dt_Modify_FieldCompressor
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_FragiliumParts ^{
        Equipments=WEnergy,WSplinter,WMissile,Engine,FuelTank,Radar,Scaner,Droid,Hook,DefGenerator
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Детали из фрагилиума<clrEnd>
        ExText=<color=248,252,248>Самые ходовые детали в этом оборудовании были заменены на более износостойкие аналоги из фрагилиума.</color>
        ExText=<clr><clrEnd>
        ExText=Надёжность оборудования: <clr>+40%<clrEnd>
        Fragility=71
        LockedAcryn=3
        Name=dt_Modify_FragiliumParts
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_HackedInjector ^{
        Equipments=Engine
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Хакнутый инжектор<clrEnd>
        ExText=<color=248,252,248>Хакнутая версия инжектора пропускает в камеру сгорания больше топлива, что ведёт к существенному приросту скорости двигателя. К несчастью, повышенное поступление топлива фактически переводит двигатель на постоянный форсированный режим, что отрицательным образом сказывается на долговечности агрегата.</color>
        ExText=<clr><clrEnd>
        ExText=Скорость двигателя: <clr>+200<clrEnd> ед.
        ExText=Надёжность двигателя: <clr>-40%<clrEnd>
        Fragility=165
        LockedAcryn=3
        Name=dt_Modify_HackedInjector
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_MeonChips ^{
        Equipments=Radar
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Меонные чипы<clrEnd>
        ExText=<color=248,252,248>Меонные чипы не славятся своей долговечностью, зато позволяют значительно повысить общую эффективность радара.</color>
        ExText=<clr><clrEnd>
        ExText=Дальность радара: <clr>+900<clrEnd> млн. км.
        ExText=Надёжность оборудования: <clr>-20%<clrEnd>
        Fragility=125
        LockedAcryn=3
        Name=dt_Modify_MeonChips
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_ProcessorsExtreme ^{
        Equipments=Droid
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Процессоры "Экстрим"<clrEnd>
        ExText=<color=248,252,248>Процессоры "Экстрим" меняют логику поведения дроида, в результате чего тот становится менее осторожным, но в тоже время быстрее производит необходимый ремонт.</color>
        ExText=<clr><clrEnd>
        ExText=Эффективность дроида: <clr>+8<clrEnd> ед.
        ExText=Надёжность дроида: <clr>-20%<clrEnd>
        Fragility=125
        LockedAcryn=3
        Name=dt_Modify_ProcessorsExtreme
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_ReinforcedServoDrives ^{
        Equipments=Hook
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Усиленные сервоприводы<clrEnd>
        ExText=<color=248,252,248>Захват оборудован усиленными сервоприводами, что позволяет ему захватывать предметы большего размера и веса. К сожалению, весь остальной механизм устройства на повышенную нагрузку не рассчитан, а потому выходит из строя намного раньше положенного срока.</color>
        ExText=<clr><clrEnd>
        ExText=Мощность захвата: <clr>+40<clrEnd> ед.
        ExText=Надёжность захвата: <clr>-25%<clrEnd>
        Fragility=133
        LockedAcryn=3
        Name=dt_Modify_ReinforcedServoDrives
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_SecurityReplacement ^{
        Equipments=FuelTank
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Замена систем безопасности<clrEnd>
        ExText=<color=248,252,248>Перекодировка и удаление некоторых систем безопасности позволили ощутимо повысить максимальную вместимость бака, однако его надёжность от такого издевательства отнюдь не улучшилась.</color>
        ExText=<clr><clrEnd>
        ExText=Объем бака: <clr>+20<clrEnd> ед.
        ExText=Надёжность бака: <clr>-60%<clrEnd>
        Fragility=250
        LockedAcryn=3
        Name=dt_Modify_SecurityReplacement
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_SmugglersCompartment ^{
        Equipments=Hull
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Отсек контрабандиста<clrEnd>
        ExText=<color=248,252,248>На этот корабль был установлен специальный отсек для перевозки контрабанды, значительно расширивший его изначальную вместимость. Дополнительный отсек защищён от сканирования, но, к сожалению, не несёт на себе никакой брони, а потому является ослабленной зоной корпуса.</color>
        ExText=<clr><clrEnd>
        ExText=Размер корпуса: <clr>+25%<clrEnd>
        ExText=Восприимчивость к урону: <clr>+15%<clrEnd>
        FragilityEnergy=117
        FragilityMissile=117
        FragilitySplinter=117
        LockedAcryn=3
        Name=dt_Modify_SmugglersCompartment
        NonSearchable=1
        Priority=0
        Special=1
    }
    ExpArts_TillCapacitors ^{
        Equipments=WEnergy
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Тиливые конденсаторы<clrEnd>
        ExText=<color=248,252,248>Тиливые конденсаторы обладают повышенной ёмкостью, что позволяет накапливать большую мощность выстрела, однако эта же избыточная мощность быстрее изнашивает проводящие энергоузлы орудия, которые попросту не предназначались для распределения подобных нагрузок.</color>
        ExText=<clr><clrEnd>
        ExText=Сила оружия: <clr>+15<clrEnd> ед.
        ExText=Надёжность оружия: <clr>-20%<clrEnd>
        Fragility=125
        LockedAcryn=3
        Name=dt_Modify_TillCapacitors
        NonSearchable=1
        Priority=0
        Special=1
        bonWEnergy=15
    }
    ExpArts_WeakenedLimiters ^{
        Equipments=WSplinter
        ExText=<clr><clrEnd>
        ExText=<color=248,252,248>Улучшение:</color> <clr>Подкрученные ограничители<clrEnd>
        ExText=<color=248,252,248>Блок управления стрельбой, с которого были аккуратно сняты некоторые заводские ограничения. Орудия, оснащённые таким блоком, способны вести огонь на большие дистанции, однако механизмы компенсации отдачи не выдерживают дополнительной нагрузки из-за чего быстрее выходят из строя.</color>
        ExText=<clr><clrEnd>
        ExText=Дальность стрельбы: <clr>+40<clrEnd> ед.
        ExText=Надёжность оружия: <clr>-20%<clrEnd>
        Fragility=125
        LockedAcryn=3
        Name=dt_Modify_WeakenedLimiters
        NonSearchable=1
        Priority=0
        Special=1
        bonWRadius=40
    }
}
